webpackJsonp([10],{703:function(s,n,a){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),a.d(n,"sources",function(){return e});var e=[{filename:"component.ts",contents:{raw:a(919),highlighted:a(920)}},{filename:"template.html",contents:{raw:a(921),highlighted:a(922)}},{filename:"module.ts",contents:{raw:a(923),highlighted:a(924)}}]},919:function(s,n){s.exports="import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CalendarEvent, CalendarMonthViewDay } from 'angular-calendar';\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n  // don't do this in your app, its only so the styles get applied globally\n  styles: [\n    `\n    .cal-day-selected,\n    .cal-day-selected:hover {\n      background-color: deeppink !important;\n    }\n  `\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DemoComponent {\n  viewDate: Date = new Date();\n\n  selectedDay: CalendarMonthViewDay;\n\n  events: CalendarEvent[] = [];\n\n  dayClicked(day: CalendarMonthViewDay): void {\n    if (this.selectedDay) {\n      delete this.selectedDay.cssClass;\n    }\n    day.cssClass = 'cal-day-selected';\n    this.selectedDay = day;\n  }\n\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): void {\n    body.forEach(day => {\n      if (\n        this.selectedDay &&\n        day.date.getTime() === this.selectedDay.date.getTime()\n      ) {\n        day.cssClass = 'cal-day-selected';\n        this.selectedDay = day;\n      }\n    });\n  }\n}\n"},920:function(s,n){s.exports='<span class="hljs-keyword">import</span> {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation\n} from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CalendarEvent, CalendarMonthViewDay } from <span class="hljs-string">\'angular-calendar\'</span>;\n\n@Component({\n  selector: <span class="hljs-string">\'mwl-demo-component\'</span>,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: <span class="hljs-string">\'template.html\'</span>,\n  <span class="hljs-comment">// don\'t do this in your app, its only so the styles get applied globally</span>\n  styles: [\n    `\n    .cal-day-selected,\n    .cal-day-selected:hover {\n      background-color: deeppink !important;\n    }\n  `\n  ],\n  encapsulation: ViewEncapsulation.None\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoComponent {\n  viewDate: <span class="hljs-built_in">Date</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();\n\n  selectedDay: CalendarMonthViewDay;\n\n  events: CalendarEvent[] = [];\n\n  dayClicked(day: CalendarMonthViewDay): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.selectedDay) {\n      <span class="hljs-keyword">delete</span> <span class="hljs-keyword">this</span>.selectedDay.cssClass;\n    }\n    day.cssClass = <span class="hljs-string">\'cal-day-selected\'</span>;\n    <span class="hljs-keyword">this</span>.selectedDay = day;\n  }\n\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): <span class="hljs-built_in">void</span> {\n    body.forEach(day =&gt; {\n      <span class="hljs-keyword">if</span> (\n        <span class="hljs-keyword">this</span>.selectedDay &amp;&amp;\n        day.date.getTime() === <span class="hljs-keyword">this</span>.selectedDay.date.getTime()\n      ) {\n        day.cssClass = <span class="hljs-string">\'cal-day-selected\'</span>;\n        <span class="hljs-keyword">this</span>.selectedDay = day;\n      }\n    });\n  }\n}\n'},921:function(s,n){s.exports='<div class="row">\n  <div class="col-md-6">\n    <div class="btn-group">\n      <div\n        class="btn btn-primary"\n        mwlCalendarPreviousView\n        view="month"\n        [(viewDate)]="viewDate">\n        Previous\n      </div>\n      <div\n        class="btn btn-outline-secondary"\n        mwlCalendarToday\n        [(viewDate)]="viewDate">\n        Today\n      </div>\n      <div\n        class="btn btn-primary"\n        mwlCalendarNextView\n        view="month"\n        [(viewDate)]="viewDate">\n        Next\n      </div>\n    </div>\n  </div>\n  <div class="col-md-6 text-right">\n    <h3>{{ viewDate | calendarDate:\'monthViewTitle\':\'en\' }}</h3>\n  </div>\n</div>\n<br>\n\n<mwl-calendar-month-view\n  [viewDate]="viewDate"\n  [events]="events"\n  (beforeViewRender)="beforeMonthViewRender($event)"\n  (dayClicked)="dayClicked($event.day)">\n</mwl-calendar-month-view>\n'},922:function(s,n){s.exports='<span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"row"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-md-6"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn-group"</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-primary"</span>\n        <span class="hljs-attribute">mwlCalendarPreviousView</span>\n        <span class="hljs-attribute">view</span>=<span class="hljs-value">"month"</span>\n        [(<span class="hljs-attribute">viewDate</span>)]=<span class="hljs-value">"viewDate"</span>&gt;</span>\n        Previous\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-outline-secondary"</span>\n        <span class="hljs-attribute">mwlCalendarToday</span>\n        [(<span class="hljs-attribute">viewDate</span>)]=<span class="hljs-value">"viewDate"</span>&gt;</span>\n        Today\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-title">div</span>\n        <span class="hljs-attribute">class</span>=<span class="hljs-value">"btn btn-primary"</span>\n        <span class="hljs-attribute">mwlCalendarNextView</span>\n        <span class="hljs-attribute">view</span>=<span class="hljs-value">"month"</span>\n        [(<span class="hljs-attribute">viewDate</span>)]=<span class="hljs-value">"viewDate"</span>&gt;</span>\n        Next\n      <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">div</span> <span class="hljs-attribute">class</span>=<span class="hljs-value">"col-md-6 text-right"</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-title">h3</span>&gt;</span>{{ viewDate | calendarDate:\'monthViewTitle\':\'en\' }}<span class="hljs-tag">&lt;/<span class="hljs-title">h3</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-title">br</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-month-view</span>\n  [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n  [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>\n  (<span class="hljs-attribute">beforeViewRender</span>)=<span class="hljs-value">"beforeMonthViewRender($event)"</span>\n  (<span class="hljs-attribute">dayClicked</span>)=<span class="hljs-value">"dayClicked($event.day)"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-month-view</span>&gt;</span>\n'},923:function(s,n){s.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot(),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }])\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent]\n})\nexport class DemoModule {}\n"},924:function(s,n){s.exports='<span class="hljs-keyword">import</span> { NgModule } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } from <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { RouterModule } from <span class="hljs-string">\'@angular/router\'</span>;\n<span class="hljs-keyword">import</span> { CalendarModule } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { DemoUtilsModule } from <span class="hljs-string">\'../demo-utils/module\'</span>;\n<span class="hljs-keyword">import</span> { DemoComponent } from <span class="hljs-string">\'./component\'</span>;\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot(),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: <span class="hljs-string">\'\'</span>, component: DemoComponent }])\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent]\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule {}\n'}});
//# sourceMappingURL=10-e0917b22ec6039edc972.js.map