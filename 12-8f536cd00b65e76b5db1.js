webpackJsonp([12],{711:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),a.d(s,"sources",function(){return e});var e=[{filename:"component.ts",contents:{raw:a(891),highlighted:a(892)}},{filename:"template.html",contents:{raw:a(893),highlighted:a(894)}},{filename:"module.ts",contents:{raw:a(895),highlighted:a(896)}}]},891:function(n,s){n.exports="import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport {\n  getMonth,\n  startOfMonth,\n  startOfWeek,\n  startOfDay,\n  endOfMonth,\n  endOfWeek,\n  endOfDay\n} from 'date-fns';\nimport RRule from 'rrule';\nimport { CalendarEvent } from 'angular-calendar';\nimport { colors } from '../demo-utils/colors';\n\ninterface RecurringEvent {\n  title: string;\n  color: any;\n  rrule?: {\n    freq: RRule.Frequency;\n    bymonth?: number;\n    bymonthday?: number;\n    byweekday?: RRule.Weekday[];\n  };\n}\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html'\n})\nexport class DemoComponent implements OnInit {\n  view: string = 'month';\n\n  viewDate: Date = new Date();\n\n  recurringEvents: RecurringEvent[] = [\n    {\n      title: 'Recurs on the 5th of each month',\n      color: colors.yellow,\n      rrule: {\n        freq: RRule.MONTHLY,\n        bymonthday: 5\n      }\n    },\n    {\n      title: 'Recurs yearly on the 10th of the current month',\n      color: colors.blue,\n      rrule: {\n        freq: RRule.YEARLY,\n        bymonth: getMonth(new Date()) + 1,\n        bymonthday: 10\n      }\n    },\n    {\n      title: 'Recurs weekly on mondays',\n      color: colors.red,\n      rrule: {\n        freq: RRule.WEEKLY,\n        byweekday: [RRule.MO]\n      }\n    }\n  ];\n\n  calendarEvents: CalendarEvent[] = [];\n\n  ngOnInit(): void {\n    this.updateCalendarEvents();\n  }\n\n  updateCalendarEvents(): void {\n    this.calendarEvents = [];\n\n    const startOfPeriod: any = {\n      month: startOfMonth,\n      week: startOfWeek,\n      day: startOfDay\n    };\n\n    const endOfPeriod: any = {\n      month: endOfMonth,\n      week: endOfWeek,\n      day: endOfDay\n    };\n\n    this.recurringEvents.forEach(event => {\n      const rule: RRule = new RRule(\n        Object.assign({}, event.rrule, {\n          dtstart: startOfPeriod[this.view](this.viewDate),\n          until: endOfPeriod[this.view](this.viewDate)\n        })\n      );\n\n      rule.all().forEach(date => {\n        this.calendarEvents.push(\n          Object.assign({}, event, {\n            start: new Date(date)\n          })\n        );\n      });\n    });\n  }\n}\n"},892:function(n,s){n.exports='<span class="hljs-keyword">import</span> { Component, ChangeDetectionStrategy, OnInit } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> {\n  getMonth,\n  startOfMonth,\n  startOfWeek,\n  startOfDay,\n  endOfMonth,\n  endOfWeek,\n  endOfDay\n} from <span class="hljs-string">\'date-fns\'</span>;\n<span class="hljs-keyword">import</span> RRule from <span class="hljs-string">\'rrule\'</span>;\n<span class="hljs-keyword">import</span> { CalendarEvent } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { colors } from <span class="hljs-string">\'../demo-utils/colors\'</span>;\n\n<span class="hljs-interface"><span class="hljs-keyword">interface</span> RecurringEvent </span>{\n  title: <span class="hljs-built_in">string</span>;\n  color: <span class="hljs-built_in">any</span>;\n  rrule?: {\n    freq: RRule.Frequency;\n    bymonth?: <span class="hljs-built_in">number</span>;\n    bymonthday?: <span class="hljs-built_in">number</span>;\n    byweekday?: RRule.Weekday[];\n  };\n}\n\n@Component({\n  selector: <span class="hljs-string">\'mwl-demo-component\'</span>,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: <span class="hljs-string">\'template.html\'</span>\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoComponent <span class="hljs-keyword">implements</span> OnInit {\n  view: <span class="hljs-built_in">string</span> = <span class="hljs-string">\'month\'</span>;\n\n  viewDate: <span class="hljs-built_in">Date</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();\n\n  recurringEvents: RecurringEvent[] = [\n    {\n      title: <span class="hljs-string">\'Recurs on the 5th of each month\'</span>,\n      color: colors.yellow,\n      rrule: {\n        freq: RRule.MONTHLY,\n        bymonthday: <span class="hljs-number">5</span>\n      }\n    },\n    {\n      title: <span class="hljs-string">\'Recurs yearly on the 10th of the current month\'</span>,\n      color: colors.blue,\n      rrule: {\n        freq: RRule.YEARLY,\n        bymonth: getMonth(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()) + <span class="hljs-number">1</span>,\n        bymonthday: <span class="hljs-number">10</span>\n      }\n    },\n    {\n      title: <span class="hljs-string">\'Recurs weekly on mondays\'</span>,\n      color: colors.red,\n      rrule: {\n        freq: RRule.WEEKLY,\n        byweekday: [RRule.MO]\n      }\n    }\n  ];\n\n  calendarEvents: CalendarEvent[] = [];\n\n  ngOnInit(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">this</span>.updateCalendarEvents();\n  }\n\n  updateCalendarEvents(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-keyword">this</span>.calendarEvents = [];\n\n    <span class="hljs-keyword">const</span> startOfPeriod: <span class="hljs-built_in">any</span> = {\n      month: startOfMonth,\n      week: startOfWeek,\n      day: startOfDay\n    };\n\n    <span class="hljs-keyword">const</span> endOfPeriod: <span class="hljs-built_in">any</span> = {\n      month: endOfMonth,\n      week: endOfWeek,\n      day: endOfDay\n    };\n\n    <span class="hljs-keyword">this</span>.recurringEvents.forEach(event =&gt; {\n      <span class="hljs-keyword">const</span> rule: RRule = <span class="hljs-keyword">new</span> RRule(\n        <span class="hljs-built_in">Object</span>.assign({}, event.rrule, {\n          dtstart: startOfPeriod[<span class="hljs-keyword">this</span>.view](<span class="hljs-keyword">this</span>.viewDate),\n          until: endOfPeriod[<span class="hljs-keyword">this</span>.view](<span class="hljs-keyword">this</span>.viewDate)\n        })\n      );\n\n      rule.all().forEach(date =&gt; {\n        <span class="hljs-keyword">this</span>.calendarEvents.push(\n          <span class="hljs-built_in">Object</span>.assign({}, event, {\n            start: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(date)\n          })\n        );\n      });\n    });\n  }\n}\n'},893:function(n,s){n.exports='<mwl-demo-utils-calendar-header\n  [(view)]="view"\n  [(viewDate)]="viewDate"\n  (viewDateChange)="updateCalendarEvents()"\n  (viewChange)="updateCalendarEvents()">\n</mwl-demo-utils-calendar-header>\n\n<div [ngSwitch]="view">\n  <mwl-calendar-month-view\n    *ngSwitchCase="\'month\'"\n    [viewDate]="viewDate"\n    [events]="calendarEvents">\n  </mwl-calendar-month-view>\n  <mwl-calendar-week-view\n    *ngSwitchCase="\'week\'"\n    [viewDate]="viewDate"\n    [events]="calendarEvents">\n  </mwl-calendar-week-view>\n  <mwl-calendar-day-view\n    *ngSwitchCase="\'day\'"\n    [viewDate]="viewDate"\n    [events]="calendarEvents">\n  </mwl-calendar-day-view>\n</div>'},894:function(n,s){n.exports='<span class="hljs-tag">&lt;<span class="hljs-title">mwl-demo-utils-calendar-header</span>\n  [(<span class="hljs-attribute">view</span>)]=<span class="hljs-value">"view"</span>\n  [(<span class="hljs-attribute">viewDate</span>)]=<span class="hljs-value">"viewDate"</span>\n  (<span class="hljs-attribute">viewDateChange</span>)=<span class="hljs-value">"updateCalendarEvents()"</span>\n  (<span class="hljs-attribute">viewChange</span>)=<span class="hljs-value">"updateCalendarEvents()"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">mwl-demo-utils-calendar-header</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-title">div</span> [<span class="hljs-attribute">ngSwitch</span>]=<span class="hljs-value">"view"</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-month-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'month\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"calendarEvents"</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-month-view</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-week-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'week\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"calendarEvents"</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-week-view</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-day-view</span>\n    *<span class="hljs-attribute">ngSwitchCase</span>=<span class="hljs-value">"\'day\'"</span>\n    [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span>\n    [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"calendarEvents"</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-day-view</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">div</span>&gt;</span>'},895:function(n,s){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot(),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }])\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent]\n})\nexport class DemoModule {}\n"},896:function(n,s){n.exports='<span class="hljs-keyword">import</span> { NgModule } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } from <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { RouterModule } from <span class="hljs-string">\'@angular/router\'</span>;\n<span class="hljs-keyword">import</span> { CalendarModule } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { DemoUtilsModule } from <span class="hljs-string">\'../demo-utils/module\'</span>;\n<span class="hljs-keyword">import</span> { DemoComponent } from <span class="hljs-string">\'./component\'</span>;\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot(),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: <span class="hljs-string">\'\'</span>, component: DemoComponent }])\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent]\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule {}\n'}});
//# sourceMappingURL=12-8f536cd00b65e76b5db1.js.map