webpackJsonp([3],{672:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),t.d(e,"sources",function(){return a});var a=[{filename:"component.ts",contents:t(763)},{filename:"template.html",contents:t(764)},{filename:"styles.css",contents:t(765)},{filename:"module.ts",contents:t(766)}]},763:function(n,e){n.exports="import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CalendarEvent, CalendarMonthViewDay } from 'angular-calendar';\nimport {\n  subMonths,\n  addMonths,\n  addDays,\n  addWeeks,\n  subDays,\n  subWeeks,\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  startOfDay,\n  endOfDay\n} from 'date-fns';\n\ntype CalendarPeriod = 'day' | 'week' | 'month';\n\nfunction addPeriod(period: CalendarPeriod, date: Date, amount: number): Date {\n  return {\n    day: addDays,\n    week: addWeeks,\n    month: addMonths\n  }[period](date, amount);\n}\n\nfunction subPeriod(period: CalendarPeriod, date: Date, amount: number): Date {\n  return {\n    day: subDays,\n    week: subWeeks,\n    month: subMonths\n  }[period](date, amount);\n}\n\nfunction startOfPeriod(period: CalendarPeriod, date: Date): Date {\n  return {\n    day: startOfDay,\n    week: startOfWeek,\n    month: startOfMonth\n  }[period](date);\n}\n\nfunction endOfPeriod(period: CalendarPeriod, date: Date): Date {\n  return {\n    day: endOfDay,\n    week: endOfWeek,\n    month: endOfMonth\n  }[period](date);\n}\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n  styleUrls: ['styles.css'],\n  // this is a hack to get styles to apply to the inner component. Your app should just use a global stylesheet\n  encapsulation: ViewEncapsulation.None\n})\nexport class DemoComponent {\n  view: CalendarPeriod = 'month';\n\n  viewDate: Date = new Date();\n\n  events: CalendarEvent[] = [];\n\n  minDate: Date = subMonths(new Date(), 1);\n\n  maxDate: Date = addMonths(new Date(), 1);\n\n  prevBtnDisabled: boolean = false;\n\n  nextBtnDisabled: boolean = false;\n\n  constructor() {\n    this.dateOrViewChanged();\n  }\n\n  increment(): void {\n    this.changeDate(addPeriod(this.view, this.viewDate, 1));\n  }\n\n  decrement(): void {\n    this.changeDate(subPeriod(this.view, this.viewDate, 1));\n  }\n\n  today(): void {\n    this.changeDate(new Date());\n  }\n\n  dateIsValid(date: Date): boolean {\n    return date >= this.minDate && date <= this.maxDate;\n  }\n\n  changeDate(date: Date): void {\n    this.viewDate = date;\n    this.dateOrViewChanged();\n  }\n\n  changeView(view: CalendarPeriod): void {\n    this.view = view;\n    this.dateOrViewChanged();\n  }\n\n  dateOrViewChanged(): void {\n    this.prevBtnDisabled = !this.dateIsValid(\n      endOfPeriod(this.view, subPeriod(this.view, this.viewDate, 1))\n    );\n    this.nextBtnDisabled = !this.dateIsValid(\n      startOfPeriod(this.view, addPeriod(this.view, this.viewDate, 1))\n    );\n    if (this.viewDate < this.minDate) {\n      this.changeDate(this.minDate);\n    } else if (this.viewDate > this.maxDate) {\n      this.changeDate(this.maxDate);\n    }\n  }\n\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): void {\n    body.forEach(day => {\n      if (!this.dateIsValid(day.date)) {\n        day.cssClass = 'cal-disabled';\n      }\n    });\n  }\n}\n"},764:function(n,e){n.exports='<div class="row text-center">\n  <div class="col-md-4">\n    <div class="btn-group">\n      <button class="btn btn-primary" (click)="decrement()" [disabled]="prevBtnDisabled">\n        Previous\n      </button>\n      <button class="btn btn-secondary" (click)="today()">\n        Today\n      </button>\n      <button class="btn btn-primary" (click)="increment()" [disabled]="nextBtnDisabled">\n        Next\n      </button>\n    </div>\n  </div>\n  <div class="col-md-4">\n    <h3>{{ viewDate | calendarDate:(view + \'ViewTitle\'):\'en\' }}</h3>\n  </div>\n  <div class="col-md-4">\n    <div class="btn-group">\n      <div class="btn btn-primary" (click)="changeView(\'month\')" [class.active]="view === \'month\'">Month</div>\n      <div class="btn btn-primary" (click)="changeView(\'week\')" [class.active]="view === \'week\'">Week</div>\n      <div class="btn btn-primary" (click)="changeView(\'day\')" [class.active]="view === \'day\'">Day</div>\n    </div>\n  </div>\n</div>\n<br>\n\n<div [ngSwitch]="view">\n  <mwl-calendar-month-view\n    *ngSwitchCase="\'month\'"\n    [viewDate]="viewDate"\n    [events]="events"\n    (beforeViewRender)="beforeMonthViewRender($event)">\n  </mwl-calendar-month-view>\n  <mwl-calendar-week-view\n    *ngSwitchCase="\'week\'"\n    [viewDate]="viewDate"\n    [events]="events">\n  </mwl-calendar-week-view>\n  <mwl-calendar-day-view\n    *ngSwitchCase="\'day\'"\n    [viewDate]="viewDate"\n    [events]="events">\n  </mwl-calendar-day-view>\n</div>'},765:function(n,e){n.exports=".cal-disabled {\n  background-color: #eee;\n  pointer-events: none;\n}\n\n.cal-disabled .cal-day-number {\n  opacity: 0.1;\n}"},766:function(n,e){n.exports="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot(),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }])\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent]\n})\nexport class DemoModule {}\n"}});
//# sourceMappingURL=3-c5904c99c72d2aad8662.js.map