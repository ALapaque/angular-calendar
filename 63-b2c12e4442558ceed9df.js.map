{"version":3,"sources":["webpack:///63-b2c12e4442558ceed9df.js","webpack:///./node_modules/@angular/http/@angular/http.es5.js","webpack:///./dist/aot/demos/demo-modules/async-events/component.ngfactory.ts","webpack:///./demos/demo-modules/async-events/module.ts","webpack:///./demos/demo-modules/async-events/component.ts","webpack:///./dist/aot/demos/demo-modules/async-events/module.ngfactory.ts"],"names":["webpackJsonp","618","module","__webpack_exports__","__webpack_require__","normalizeMethodName","method","toUpperCase","RequestMethod","Get","Post","Put","Delete","Options","Head","Patch","Error","getResponseURL","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","stringToArrayBuffer","input","view","Uint16Array","length","i","strLen","charCodeAt","buffer","paramParser","rawParams","map","Map","split","forEach","param","eqIdx","indexOf","_a","slice","key","val","list","get","push","set","standardEncoding","v","encodeURIComponent","replace","_getJsonpConnections","w","window","_jsonpConnections","JSONP_HOME","urlEncodeParams","params","searchParams","URLSearchParams","Object","keys","value","Array","isArray","element","append","toString","httpRequest","backend","request","createConnection","response","mergeOptions","defaultOpts","providedOpts","url","newOptions","merge","RequestOptions","search","headers","body","withCredentials","responseType","_createDefaultCookieXSRFStrategy","http_es5_CookieXSRFStrategy","httpFactory","xhrBackend","requestOptions","Http","jsonpFactory","jsonpBackend","http_es5_Jsonp","View_DemoComponent_1","_l","core_es5","View_DemoComponent_3","_v","en","$event","ad","_co","component","dayClicked","day","eventClicked","event","calendarMonthView_component_ngfactory","calendarMonthView_component","calendarUtils_provider","viewDate","events","activeDayIsOpen","_ck","parent","context","$implicit","View_DemoComponent_4","calendarWeekView_component_ngfactory","calendarWeekView_component","View_DemoComponent_5","calendarDayView_component_ngfactory","calendarDayView_component","View_DemoComponent_2","common_es5","ngSwitch","ngSwitchCase","View_DemoComponent_0","fetchEvents","calendar_header_component_ngfactory","calendar_header_component","viewChange","viewDateChange","ngIf","ngIfElse","transform","events$","View_DemoComponent_Host_0","RenderType_DemoComponent","component_DemoComponent","defineProperty","DemoModule","calendarTooltip_directive_ngfactory","datepicker_ngfactory","tslib_es6","Observable","platform_browser_es5","BrowserXhr","prototype","build","XMLHttpRequest","decorators","type","ctorParameters","ReadyState","Unsent","Open","HeadersReceived","Loading","Done","Cancelled","ResponseType","Basic","Cors","Default","Opaque","ContentType","NONE","JSON","FORM","FORM_DATA","TEXT","BLOB","ARRAY_BUFFER","ResponseContentType","Text","Json","ArrayBuffer","Blob","Headers","_this","this","_headers","_normalizedNames","values","name","delete","fromResponseHeaderString","headersString","line","index","trim","getAll","lcName","toLowerCase","fn","has","from","join","mayBeSetNormalizedName","toJSON","serialized","apply","entries","ResponseOptions","opts","status","statusText","options","http_es5_BaseResponseOptions","_super","BaseResponseOptions","call","ConnectionBackend","XSRFStrategy","Connection","configureRequest","req","isSuccess","QueryEncoder","encodeKey","k","encodeValue","queryEncoder","paramsMap","clone","appendAll","storedParam","setAll","replaceAll","paramsList","Body","json","_body","parse","text","encodingHint","String","fromCharCode","Uint8Array","stringify","arrayBuffer","blob","http_es5_Response","Response","responseOptions","ok","_nextRequestId","BrowserJsonp","node","document","createElement","src","nextRequestID","requestCallback","id","exposeConnection","connection","removeConnection","send","appendChild","cleanup","parentNode","removeChild","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection","finished","data","http_es5_JSONPConnection_","JSONPConnection_","_dom","baseResponseOptions","_finished","TypeError","responseObserver","readyState","_id","callback","lastIndexOf","substring","script","_script","onLoad","responseOptions_1","error","_responseData","next","complete","onError","message","addEventListener","removeEventListener","http_es5_JSONPBackend","JSONPBackend","arguments","http_es5_JSONPBackend_","JSONPBackend_","_browserJSONP","_baseResponseOptions","XSSI_PREFIX","http_es5_XHRConnection","XHRConnection","browserXHR","_xhr","open","responseText","err","setDetectedContentType","setRequestHeader","getBody","abort","contentType","CookieXSRFStrategy","_cookieName","_headerName","xsrfToken","getCookie","XHRBackend","_browserXHR","_xsrfStrategy","_mergeSearchParams","enumerable","configurable","_parseParams","objParams","item","_appendParam","http_es5_BaseRequestOptions","BaseRequestOptions","http_es5_Request","Request","paramsArg","prefix","detectContentType","ArrayBuffer$1","detectContentTypeFromBody","FormData","Blob$1","noop","_backend","_defaultOptions","responseObservable","post","put","patch","head","Jsonp","defaultOptions","HttpModule","args","providers","provide","useFactory","deps","useClass","JsonpModule","date_fns","colors","DemoComponent","http","Date","ngOnInit","getStart","month","week","getEnd","res","results","film","title","start","release_date","color","yellow","meta","date","styles_DemoComponent","encapsulation","styles","DemoComponentNgFactory","forms_es5","ngb_calendar","datepicker_i18n","ngb_date_parser_formatter","datepicker_config","timepicker_config","draggableHelper_provider","calendarEventTitleFormatter_provider","calendarDateFormatter_provider","resizable_module","dragAndDrop_module","calendar_module","datepicker_module","timepicker_module","demo_utils_module","router_es5","d","DemoModuleNgFactory","path"],"mappings":"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","file":"63-b2c12e4442558ceed9df.js","sourcesContent":["webpackJsonp([63],{\n\n/***/ 618:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/@angular/core.es5.js\nvar core_es5 = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./demos/demo-modules/async-events/module.ts\nvar DemoModule = /** @class */ (function () {\n    function DemoModule() {\n    }\n    return DemoModule;\n}());\n\n//# sourceMappingURL=module.js.map\n// EXTERNAL MODULE: ./dist/aot/src/directives/calendarTooltip.directive.ngfactory.ts\nvar calendarTooltip_directive_ngfactory = __webpack_require__(275);\n\n// EXTERNAL MODULE: ./dist/aot/node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ngfactory.ts + 4 modules\nvar datepicker_ngfactory = __webpack_require__(276);\n\n// EXTERNAL MODULE: ./dist/aot/src/components/month/calendarMonthView.component.ngfactory.ts + 6 modules\nvar calendarMonthView_component_ngfactory = __webpack_require__(279);\n\n// EXTERNAL MODULE: ./src/components/month/calendarMonthView.component.ts\nvar calendarMonthView_component = __webpack_require__(169);\n\n// EXTERNAL MODULE: ./src/providers/calendarUtils.provider.ts\nvar calendarUtils_provider = __webpack_require__(28);\n\n// EXTERNAL MODULE: ./dist/aot/src/components/week/calendarWeekView.component.ngfactory.ts + 4 modules\nvar calendarWeekView_component_ngfactory = __webpack_require__(281);\n\n// EXTERNAL MODULE: ./src/components/week/calendarWeekView.component.ts\nvar calendarWeekView_component = __webpack_require__(171);\n\n// EXTERNAL MODULE: ./dist/aot/src/components/day/calendarDayView.component.ngfactory.ts + 6 modules\nvar calendarDayView_component_ngfactory = __webpack_require__(280);\n\n// EXTERNAL MODULE: ./src/components/day/calendarDayView.component.ts\nvar calendarDayView_component = __webpack_require__(170);\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/@angular/common.es5.js\nvar common_es5 = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(46);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/Observable.js\nvar Observable = __webpack_require__(5);\nvar Observable_default = /*#__PURE__*/__webpack_require__.n(Observable);\n\n// EXTERNAL MODULE: ./node_modules/@angular/platform-browser/@angular/platform-browser.es5.js\nvar platform_browser_es5 = __webpack_require__(30);\n\n// CONCATENATED MODULE: ./node_modules/@angular/http/@angular/http.es5.js\n\n/**\n * @license Angular v4.3.6\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: core_es5[\"y\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\nvar RequestMethod = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\nvar ReadyState = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\nvar ResponseType = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\nvar ContentType = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\nvar ResponseContentType = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * \\@experimental\n */\nvar Headers = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function Headers(headers) {\n        var _this = this;\n        /**\n         * \\@internal header names are lower case\n         */\n        this._headers = new Map();\n        /**\n         * \\@internal map lower case names to actual names\n         */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var /** @type {?} */ headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var /** @type {?} */ index = line.indexOf(':');\n            if (index > 0) {\n                var /** @type {?} */ name = line.slice(0, index);\n                var /** @type {?} */ value = line.slice(index + 1).trim();\n                headers.set(name, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.append = function (name, value) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.delete = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.get = function (name) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * @return {?}\n     */\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var /** @type {?} */ serialized = {};\n        this._headers.forEach(function (values, name) {\n            var /** @type {?} */ split = [];\n            values.forEach(function (v) { return split.push.apply(split, v.split(',')); });\n            serialized[((_this._normalizedNames.get(name)))] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * \\@experimental\n */\nvar ResponseOptions = (function () {\n    /**\n     * @param {?=} opts\n     */\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * \\@experimental\n */\nvar http_es5_BaseResponseOptions = (function (_super) {\n    tslib_es6[\"a\" /* __extends */](BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    return BaseResponseOptions;\n}(ResponseOptions));\nhttp_es5_BaseResponseOptions.decorators = [\n    { type: core_es5[\"y\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nhttp_es5_BaseResponseOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * \\@experimental\n * @abstract\n */\nvar ConnectionBackend = (function () {\n    function ConnectionBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} request\n     * @return {?}\n     */\n    ConnectionBackend.prototype.createConnection = function (request) { };\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * \\@experimental\n * @abstract\n */\nvar Connection = (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * \\@experimental\n * @abstract\n */\nvar XSRFStrategy = (function () {\n    function XSRFStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    XSRFStrategy.prototype.configureRequest = function (req) { };\n    return XSRFStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} method\n * @return {?}\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\n/**\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stringToArrayBuffer(input) {\n    var /** @type {?} */ view = new Uint16Array(input.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var /** @type {?} */ map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * \\@experimental\n *\n */\nvar QueryEncoder = (function () {\n    function QueryEncoder() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    return QueryEncoder;\n}());\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\nvar URLSearchParams = (function () {\n    /**\n     * @param {?=} rawParams\n     * @param {?=} queryEncoder\n     */\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.clone = function () {\n        var /** @type {?} */ clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.get = function (param) {\n        var /** @type {?} */ storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var /** @type {?} */ paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nvar Body = (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(/** @type {?} */ (this._body));\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     * @param {?=} encodingHint\n     * @return {?}\n     */\n    Body.prototype.text = function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(/** @type {?} */ (this._body)));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(/** @type {?} */ (this._body)));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return (this._body);\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return (this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * \\@experimental\n */\nvar http_es5_Response = (function (_super) {\n    tslib_es6[\"a\" /* __extends */](Response, _super);\n    /**\n     * @param {?} responseOptions\n     */\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */ w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\nvar BrowserJsonp = (function () {\n    function BrowserJsonp() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserJsonp.prototype.build = function (url) {\n        var /** @type {?} */ node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    /**\n     * @return {?}\n     */\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild(/** @type {?} */ ((node))); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(/** @type {?} */ ((node)));\n        }\n    };\n    return BrowserJsonp;\n}());\nBrowserJsonp.decorators = [\n    { type: core_es5[\"y\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nBrowserJsonp.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPConnection = (function () {\n    function JSONPConnection() {\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @abstract\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection.prototype.finished = function (data) { };\n    return JSONPConnection;\n}());\nvar http_es5_JSONPConnection_ = (function (_super) {\n    tslib_es6[\"a\" /* __extends */](JSONPConnection_, _super);\n    /**\n     * @param {?} req\n     * @param {?} _dom\n     * @param {?=} baseResponseOptions\n     */\n    function JSONPConnection_(req, _dom, baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._dom = _dom;\n        _this.baseResponseOptions = baseResponseOptions;\n        _this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        _this.request = req;\n        _this.response = new Observable[\"Observable\"](function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new http_es5_Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new http_es5_Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new http_es5_Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n        return _this;\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection_.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection_;\n}(JSONPConnection));\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * \\@experimental\n * @abstract\n */\nvar http_es5_JSONPBackend = (function (_super) {\n    tslib_es6[\"a\" /* __extends */](JSONPBackend, _super);\n    function JSONPBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return JSONPBackend;\n}(ConnectionBackend));\nvar http_es5_JSONPBackend_ = (function (_super) {\n    tslib_es6[\"a\" /* __extends */](JSONPBackend_, _super);\n    /**\n     * @param {?} _browserJSONP\n     * @param {?} _baseResponseOptions\n     */\n    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    JSONPBackend_.prototype.createConnection = function (request) {\n        return new http_es5_JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    return JSONPBackend_;\n}(http_es5_JSONPBackend));\nhttp_es5_JSONPBackend_.decorators = [\n    { type: core_es5[\"y\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nhttp_es5_JSONPBackend_.ctorParameters = function () { return [\n    { type: BrowserJsonp, },\n    { type: ResponseOptions, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * \\@experimental\n */\nvar http_es5_XHRConnection = (function () {\n    /**\n     * @param {?} req\n     * @param {?} browserXHR\n     * @param {?=} baseResponseOptions\n     */\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable[\"Observable\"](function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new http_es5_Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new http_es5_Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var /** @type {?} */ blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * \\@experimental\n */\nvar http_es5_CookieXSRFStrategy = (function () {\n    /**\n     * @param {?=} _cookieName\n     * @param {?=} _headerName\n     */\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var /** @type {?} */ xsrfToken = Object(platform_browser_es5[\"u\" /* ɵgetDOM */])().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\nvar XHRBackend = (function () {\n    /**\n     * @param {?} _browserXHR\n     * @param {?} _baseResponseOptions\n     * @param {?} _xsrfStrategy\n     */\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new http_es5_XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    return XHRBackend;\n}());\nXHRBackend.decorators = [\n    { type: core_es5[\"y\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nXHRBackend.ctorParameters = function () { return [\n    { type: BrowserXhr, },\n    { type: ResponseOptions, },\n    { type: XSRFStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar RequestOptions = (function () {\n    /**\n     * @param {?=} opts\n     */\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    /**\n     * @param {?=} params\n     * @return {?}\n     */\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    /**\n     * @param {?=} objParams\n     * @return {?}\n     */\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var /** @type {?} */ params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var /** @type {?} */ value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '\\@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar http_es5_BaseRequestOptions = (function (_super) {\n    tslib_es6[\"a\" /* __extends */](BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    return BaseRequestOptions;\n}(RequestOptions));\nhttp_es5_BaseRequestOptions.decorators = [\n    { type: core_es5[\"y\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nhttp_es5_BaseRequestOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * \\@experimental\n */\nvar http_es5_Request = (function (_super) {\n    tslib_es6[\"a\" /* __extends */](Request, _super);\n    /**\n     * @param {?} requestOptions\n     */\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\n/**\n * @param {?} params\n * @return {?}\n */\nfunction urlEncodeParams(params) {\n    var /** @type {?} */ searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var /** @type {?} */ value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = ((w) /** TODO #9100 */)['FormData'] || noop;\nvar Blob$1 = ((w) /** TODO #9100 */)['Blob'] || noop;\nvar ArrayBuffer$1 = ((w) /** TODO #9100 */)['ArrayBuffer'] || noop;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */ newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return (newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        })));\n    }\n    return (newOptions.merge(new RequestOptions({ method: method, url: url })));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * \\@experimental\n */\nvar Http = (function () {\n    /**\n     * @param {?} _backend\n     * @param {?} _defaultOptions\n     */\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new http_es5_Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url))));\n        }\n        else if (url instanceof http_es5_Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new http_es5_Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new http_es5_Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new http_es5_Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new http_es5_Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new http_es5_Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new http_es5_Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new http_es5_Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    return Http;\n}());\nHttp.decorators = [\n    { type: core_es5[\"y\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nHttp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * \\@experimental\n */\nvar http_es5_Jsonp = (function (_super) {\n    tslib_es6[\"a\" /* __extends */](Jsonp, _super);\n    /**\n     * @param {?} backend\n     * @param {?} defaultOptions\n     */\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new http_es5_Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url)));\n        }\n        if (url instanceof http_es5_Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    return Jsonp;\n}(Http));\nhttp_es5_Jsonp.decorators = [\n    { type: core_es5[\"y\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nhttp_es5_Jsonp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The http module provides services to perform http requests. To get started, see the {@link Http}\n * class.\n */\n/**\n * @return {?}\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new http_es5_CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new http_es5_Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * \\@experimental\n */\nvar HttpModule = (function () {\n    function HttpModule() {\n    }\n    return HttpModule;\n}());\nHttpModule.decorators = [\n    { type: core_es5[\"F\" /* NgModule */], args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                    BrowserXhr,\n                    { provide: RequestOptions, useClass: http_es5_BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: http_es5_BaseResponseOptions },\n                    XHRBackend,\n                    { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpModule.ctorParameters = function () { return []; };\n/**\n * The module that includes jsonp's providers\n *\n * \\@experimental\n */\nvar JsonpModule = (function () {\n    function JsonpModule() {\n    }\n    return JsonpModule;\n}());\nJsonpModule.decorators = [\n    { type: core_es5[\"F\" /* NgModule */], args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: http_es5_Jsonp, useFactory: jsonpFactory, deps: [http_es5_JSONPBackend, RequestOptions] },\n                    BrowserJsonp,\n                    { provide: RequestOptions, useClass: http_es5_BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: http_es5_BaseResponseOptions },\n                    { provide: http_es5_JSONPBackend, useClass: http_es5_JSONPBackend_ },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new core_es5[\"_4\" /* Version */]('4.3.6');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the http package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=http.es5.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/add/operator/map.js\nvar map = __webpack_require__(117);\nvar map_default = /*#__PURE__*/__webpack_require__.n(map);\n\n// EXTERNAL MODULE: ./node_modules/date-fns/index.js\nvar date_fns = __webpack_require__(172);\nvar date_fns_default = /*#__PURE__*/__webpack_require__.n(date_fns);\n\n// EXTERNAL MODULE: ./demos/demo-modules/demo-utils/colors.ts\nvar colors = __webpack_require__(683);\n\n// CONCATENATED MODULE: ./demos/demo-modules/async-events/component.ts\n\n\n\n\nvar component_DemoComponent = /** @class */ (function () {\n    function DemoComponent(http) {\n        this.http = http;\n        this.view = 'month';\n        this.viewDate = new Date();\n        this.activeDayIsOpen = false;\n    }\n    DemoComponent.prototype.ngOnInit = function () {\n        this.fetchEvents();\n    };\n    DemoComponent.prototype.fetchEvents = function () {\n        var getStart = {\n            month: date_fns[\"startOfMonth\"],\n            week: date_fns[\"startOfWeek\"],\n            day: date_fns[\"startOfDay\"]\n        }[this.view];\n        var getEnd = {\n            month: date_fns[\"endOfMonth\"],\n            week: date_fns[\"endOfWeek\"],\n            day: date_fns[\"endOfDay\"]\n        }[this.view];\n        var search = new URLSearchParams();\n        search.set('primary_release_date.gte', Object(date_fns[\"format\"])(getStart(this.viewDate), 'YYYY-MM-DD'));\n        search.set('primary_release_date.lte', Object(date_fns[\"format\"])(getEnd(this.viewDate), 'YYYY-MM-DD'));\n        search.set('api_key', '0ec33936a68018857d727958dca1424f');\n        this.events$ = this.http\n            .get('https://api.themoviedb.org/3/discover/movie', { search: search })\n            .map(function (res) { return res.json(); })\n            .map(function (_a) {\n            var results = _a.results;\n            return results.map(function (film) {\n                return {\n                    title: film.title,\n                    start: new Date(film.release_date),\n                    color: colors[\"a\" /* colors */].yellow,\n                    meta: {\n                        film: film\n                    }\n                };\n            });\n        });\n    };\n    DemoComponent.prototype.dayClicked = function (_a) {\n        var date = _a.date, events = _a.events;\n        if (Object(date_fns[\"isSameMonth\"])(date, this.viewDate)) {\n            if ((Object(date_fns[\"isSameDay\"])(this.viewDate, date) && this.activeDayIsOpen === true) ||\n                events.length === 0) {\n                this.activeDayIsOpen = false;\n            }\n            else {\n                this.activeDayIsOpen = true;\n                this.viewDate = date;\n            }\n        }\n    };\n    DemoComponent.prototype.eventClicked = function (event) {\n        window.open(\"https://www.themoviedb.org/movie/\" + event.meta.film.id, '_blank');\n    };\n    DemoComponent.ctorParameters = function () { return [{ type: Http }]; };\n    return DemoComponent;\n}());\n\n//# sourceMappingURL=component.js.map\n// EXTERNAL MODULE: ./dist/aot/demos/demo-modules/demo-utils/calendar-header.component.ngfactory.ts\nvar calendar_header_component_ngfactory = __webpack_require__(682);\n\n// EXTERNAL MODULE: ./demos/demo-modules/demo-utils/calendar-header.component.ts\nvar calendar_header_component = __webpack_require__(681);\n\n// CONCATENATED MODULE: ./dist/aot/demos/demo-modules/async-events/component.ngfactory.ts\n/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n/* tslint:disable */\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar styles_DemoComponent = [];\nvar RenderType_DemoComponent = core_es5[\"_22\" /* ɵcrt */]({ encapsulation: 2,\n    styles: styles_DemoComponent, data: {} });\nfunction View_DemoComponent_1(_l) {\n    return core_es5[\"_49\" /* ɵvid */](0, [(_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n  '])), (_l()(), core_es5[\"_25\" /* ɵeld */](0, null, null, 5, 'div', [['class', 'text-center']], null, null, null, null, null)), (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n    '])),\n        (_l()(), core_es5[\"_25\" /* ɵeld */](0, null, null, 0, 'i', [['class', 'fa fa-spin fa-spinner fa-5x']], null, null, null, null, null)),\n        (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n    '])), (_l()(), core_es5[\"_25\" /* ɵeld */](0, null, null, 0, 'br', [], null, null, null, null, null)), (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n    Loading events...\\n  '])),\n        (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n']))], null, null);\n}\nfunction View_DemoComponent_3(_l) {\n    return core_es5[\"_49\" /* ɵvid */](0, [(_l()(), core_es5[\"_25\" /* ɵeld */](0, null, null, 2, 'mwl-calendar-month-view', [], null, [[null, 'dayClicked'], [null, 'eventClicked']], function (_v, en, $event) {\n            var ad = true;\n            var _co = _v.component;\n            if (('dayClicked' === en)) {\n                var pd_0 = (_co.dayClicked($event.day) !== false);\n                ad = (pd_0 && ad);\n            }\n            if (('eventClicked' === en)) {\n                var pd_1 = (_co.eventClicked($event.event) !== false);\n                ad = (pd_1 && ad);\n            }\n            return ad;\n        }, calendarMonthView_component_ngfactory[\"b\" /* View_CalendarMonthViewComponent_0 */], calendarMonthView_component_ngfactory[\"a\" /* RenderType_CalendarMonthViewComponent */])),\n        core_es5[\"_23\" /* ɵdid */](770048, null, 0, calendarMonthView_component[\"a\" /* CalendarMonthViewComponent */], [core_es5[\"j\" /* ChangeDetectorRef */],\n            calendarUtils_provider[\"a\" /* CalendarUtils */], core_es5[\"E\" /* LOCALE_ID */]], { viewDate: [0, 'viewDate'], events: [1, 'events'],\n            activeDayIsOpen: [2, 'activeDayIsOpen'] }, { dayClicked: 'dayClicked', eventClicked: 'eventClicked' }),\n        (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n    ']))], function (_ck, _v) {\n        var _co = _v.component;\n        var currVal_0 = _co.viewDate;\n        var currVal_1 = _v.parent.context.$implicit;\n        var currVal_2 = _co.activeDayIsOpen;\n        _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2);\n    }, null);\n}\nfunction View_DemoComponent_4(_l) {\n    return core_es5[\"_49\" /* ɵvid */](0, [(_l()(), core_es5[\"_25\" /* ɵeld */](0, null, null, 2, 'mwl-calendar-week-view', [], null, [[null, 'eventClicked']], function (_v, en, $event) {\n            var ad = true;\n            var _co = _v.component;\n            if (('eventClicked' === en)) {\n                var pd_0 = (_co.eventClicked($event.event) !== false);\n                ad = (pd_0 && ad);\n            }\n            return ad;\n        }, calendarWeekView_component_ngfactory[\"b\" /* View_CalendarWeekViewComponent_0 */], calendarWeekView_component_ngfactory[\"a\" /* RenderType_CalendarWeekViewComponent */])),\n        core_es5[\"_23\" /* ɵdid */](770048, null, 0, calendarWeekView_component[\"a\" /* CalendarWeekViewComponent */], [core_es5[\"j\" /* ChangeDetectorRef */],\n            calendarUtils_provider[\"a\" /* CalendarUtils */], core_es5[\"E\" /* LOCALE_ID */]], { viewDate: [0, 'viewDate'], events: [1, 'events'] }, { eventClicked: 'eventClicked' }), (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n    ']))], function (_ck, _v) {\n        var _co = _v.component;\n        var currVal_0 = _co.viewDate;\n        var currVal_1 = _v.parent.context.$implicit;\n        _ck(_v, 1, 0, currVal_0, currVal_1);\n    }, null);\n}\nfunction View_DemoComponent_5(_l) {\n    return core_es5[\"_49\" /* ɵvid */](0, [(_l()(), core_es5[\"_25\" /* ɵeld */](0, null, null, 2, 'mwl-calendar-day-view', [], null, [[null, 'eventClicked']], function (_v, en, $event) {\n            var ad = true;\n            var _co = _v.component;\n            if (('eventClicked' === en)) {\n                var pd_0 = (_co.eventClicked($event.event) !== false);\n                ad = (pd_0 && ad);\n            }\n            return ad;\n        }, calendarDayView_component_ngfactory[\"b\" /* View_CalendarDayViewComponent_0 */], calendarDayView_component_ngfactory[\"a\" /* RenderType_CalendarDayViewComponent */])),\n        core_es5[\"_23\" /* ɵdid */](770048, null, 0, calendarDayView_component[\"a\" /* CalendarDayViewComponent */], [core_es5[\"j\" /* ChangeDetectorRef */],\n            calendarUtils_provider[\"a\" /* CalendarUtils */], core_es5[\"E\" /* LOCALE_ID */]], { viewDate: [0, 'viewDate'], events: [1, 'events'] }, { eventClicked: 'eventClicked' }), (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n    ']))], function (_ck, _v) {\n        var _co = _v.component;\n        var currVal_0 = _co.viewDate;\n        var currVal_1 = _v.parent.context.$implicit;\n        _ck(_v, 1, 0, currVal_0, currVal_1);\n    }, null);\n}\nfunction View_DemoComponent_2(_l) {\n    return core_es5[\"_49\" /* ɵvid */](0, [(_l()(), core_es5[\"_25\" /* ɵeld */](0, null, null, 14, 'div', [], null, null, null, null, null)), (_l()(),\n            core_es5[\"_47\" /* ɵted */](null, ['\\n  '])), (_l()(), core_es5[\"_25\" /* ɵeld */](0, null, null, 11, 'div', [], null, null, null, null, null)), core_es5[\"_23\" /* ɵdid */](16384, null, 0, common_es5[\"q\" /* NgSwitch */], [], { ngSwitch: [0,\n                'ngSwitch'] }, null), (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n    '])), (_l()(),\n            core_es5[\"_19\" /* ɵand */](16777216, null, null, 1, null, View_DemoComponent_3)),\n        core_es5[\"_23\" /* ɵdid */](278528, null, 0, common_es5[\"r\" /* NgSwitchCase */], [core_es5[\"_7\" /* ViewContainerRef */], core_es5[\"_2\" /* TemplateRef */],\n            common_es5[\"q\" /* NgSwitch */]], { ngSwitchCase: [0, 'ngSwitchCase'] }, null), (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n    '])), (_l()(), core_es5[\"_19\" /* ɵand */](16777216, null, null, 1, null, View_DemoComponent_4)), core_es5[\"_23\" /* ɵdid */](278528, null, 0, common_es5[\"r\" /* NgSwitchCase */], [core_es5[\"_7\" /* ViewContainerRef */],\n            core_es5[\"_2\" /* TemplateRef */], common_es5[\"q\" /* NgSwitch */]], { ngSwitchCase: [0, 'ngSwitchCase'] }, null),\n        (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n    '])), (_l()(), core_es5[\"_19\" /* ɵand */](16777216, null, null, 1, null, View_DemoComponent_5)), core_es5[\"_23\" /* ɵdid */](278528, null, 0, common_es5[\"r\" /* NgSwitchCase */], [core_es5[\"_7\" /* ViewContainerRef */], core_es5[\"_2\" /* TemplateRef */], common_es5[\"q\" /* NgSwitch */]], { ngSwitchCase: [0,\n                'ngSwitchCase'] }, null), (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n  '])),\n        (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n']))], function (_ck, _v) {\n        var _co = _v.component;\n        var currVal_0 = _co.view;\n        _ck(_v, 3, 0, currVal_0);\n        var currVal_1 = 'month';\n        _ck(_v, 6, 0, currVal_1);\n        var currVal_2 = 'week';\n        _ck(_v, 9, 0, currVal_2);\n        var currVal_3 = 'day';\n        _ck(_v, 12, 0, currVal_3);\n    }, null);\n}\nfunction View_DemoComponent_0(_l) {\n    return core_es5[\"_49\" /* ɵvid */](2, [(_l()(), core_es5[\"_25\" /* ɵeld */](0, null, null, 2, 'mwl-demo-utils-calendar-header', [], null, [[null, 'viewChange'], [null, 'viewDateChange']], function (_v, en, $event) {\n            var ad = true;\n            var _co = _v.component;\n            if (('viewChange' === en)) {\n                var pd_0 = ((_co.view = $event) !== false);\n                ad = (pd_0 && ad);\n            }\n            if (('viewDateChange' === en)) {\n                var pd_1 = ((_co.viewDate = $event) !== false);\n                ad = (pd_1 && ad);\n            }\n            if (('viewDateChange' === en)) {\n                var pd_2 = (_co.fetchEvents() !== false);\n                ad = (pd_2 && ad);\n            }\n            if (('viewChange' === en)) {\n                var pd_3 = (_co.fetchEvents() !== false);\n                ad = (pd_3 && ad);\n            }\n            return ad;\n        }, calendar_header_component_ngfactory[\"b\" /* View_CalendarHeaderComponent_0 */], calendar_header_component_ngfactory[\"a\" /* RenderType_CalendarHeaderComponent */])),\n        core_es5[\"_23\" /* ɵdid */](49152, null, 0, calendar_header_component[\"a\" /* CalendarHeaderComponent */], [], { view: [0,\n                'view'], viewDate: [1, 'viewDate'] }, { viewChange: 'viewChange', viewDateChange: 'viewDateChange' }),\n        (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n'])), (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n\\n'])),\n        (_l()(), core_es5[\"_19\" /* ɵand */](0, [['loading', 2]], null, 0, null, View_DemoComponent_1)),\n        (_l()(), core_es5[\"_47\" /* ɵted */](null, ['\\n\\n'])), (_l()(), core_es5[\"_19\" /* ɵand */](16777216, null, null, 2, null, View_DemoComponent_2)), core_es5[\"_23\" /* ɵdid */](16384, null, 0, common_es5[\"m\" /* NgIf */], [core_es5[\"_7\" /* ViewContainerRef */], core_es5[\"_2\" /* TemplateRef */]], { ngIf: [0, 'ngIf'], ngIfElse: [1,\n                'ngIfElse'] }, null), core_es5[\"_41\" /* ɵpid */](131072, common_es5[\"b\" /* AsyncPipe */], [core_es5[\"j\" /* ChangeDetectorRef */]])], function (_ck, _v) {\n        var _co = _v.component;\n        var currVal_0 = _co.view;\n        var currVal_1 = _co.viewDate;\n        _ck(_v, 1, 0, currVal_0, currVal_1);\n        var currVal_2 = core_es5[\"_48\" /* ɵunv */](_v, 7, 0, core_es5[\"_39\" /* ɵnov */](_v, 8).transform(_co.events$));\n        var currVal_3 = core_es5[\"_39\" /* ɵnov */](_v, 4);\n        _ck(_v, 7, 0, currVal_2, currVal_3);\n    }, null);\n}\nfunction View_DemoComponent_Host_0(_l) {\n    return core_es5[\"_49\" /* ɵvid */](0, [(_l()(), core_es5[\"_25\" /* ɵeld */](0, null, null, 1, 'mwl-demo-component', [], null, null, null, View_DemoComponent_0, RenderType_DemoComponent)), core_es5[\"_23\" /* ɵdid */](114688, null, 0, component_DemoComponent, [Http], null, null)], function (_ck, _v) {\n        _ck(_v, 1, 0);\n    }, null);\n}\nvar DemoComponentNgFactory = core_es5[\"_20\" /* ɵccf */]('mwl-demo-component', component_DemoComponent, View_DemoComponent_Host_0, {}, {}, []);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL21hdHRsZXdpcy9Db2RlL29wZW4tc291cmNlL2FuZ3VsYXItY2FsZW5kYXIvZGVtb3MvZGVtby1tb2R1bGVzL2FzeW5jLWV2ZW50cy9jb21wb25lbnQubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvbWF0dGxld2lzL0NvZGUvb3Blbi1zb3VyY2UvYW5ndWxhci1jYWxlbmRhci9kZW1vcy9kZW1vLW1vZHVsZXMvYXN5bmMtZXZlbnRzL2NvbXBvbmVudC50cyIsIm5nOi8vL1VzZXJzL21hdHRsZXdpcy9Db2RlL29wZW4tc291cmNlL2FuZ3VsYXItY2FsZW5kYXIvZGVtb3MvZGVtby1tb2R1bGVzL2FzeW5jLWV2ZW50cy90ZW1wbGF0ZS5odG1sIiwibmc6Ly8vVXNlcnMvbWF0dGxld2lzL0NvZGUvb3Blbi1zb3VyY2UvYW5ndWxhci1jYWxlbmRhci9kZW1vcy9kZW1vLW1vZHVsZXMvYXN5bmMtZXZlbnRzL2NvbXBvbmVudC50cy5EZW1vQ29tcG9uZW50X0hvc3QuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyIgIiwiPG13bC1kZW1vLXV0aWxzLWNhbGVuZGFyLWhlYWRlclxuICBbKHZpZXcpXT1cInZpZXdcIlxuICBbKHZpZXdEYXRlKV09XCJ2aWV3RGF0ZVwiXG4gICh2aWV3RGF0ZUNoYW5nZSk9XCJmZXRjaEV2ZW50cygpXCJcbiAgKHZpZXdDaGFuZ2UpPVwiZmV0Y2hFdmVudHMoKVwiPlxuPC9td2wtZGVtby11dGlscy1jYWxlbmRhci1oZWFkZXI+XG5cbjxuZy10ZW1wbGF0ZSAjbG9hZGluZz5cbiAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyXCI+XG4gICAgPGkgY2xhc3M9XCJmYSBmYS1zcGluIGZhLXNwaW5uZXIgZmEtNXhcIj48L2k+XG4gICAgPGJyPlxuICAgIExvYWRpbmcgZXZlbnRzLi4uXG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPGRpdiAqbmdJZj1cImV2ZW50cyQgfCBhc3luYzsgZWxzZSBsb2FkaW5nOyBsZXQgZXZlbnRzXCI+XG4gIDxkaXYgW25nU3dpdGNoXT1cInZpZXdcIj5cbiAgICA8bXdsLWNhbGVuZGFyLW1vbnRoLXZpZXdcbiAgICAgICpuZ1N3aXRjaENhc2U9XCInbW9udGgnXCJcbiAgICAgIFt2aWV3RGF0ZV09XCJ2aWV3RGF0ZVwiXG4gICAgICBbZXZlbnRzXT1cImV2ZW50c1wiXG4gICAgICBbYWN0aXZlRGF5SXNPcGVuXT1cImFjdGl2ZURheUlzT3BlblwiXG4gICAgICAoZGF5Q2xpY2tlZCk9XCJkYXlDbGlja2VkKCRldmVudC5kYXkpXCJcbiAgICAgIChldmVudENsaWNrZWQpPVwiZXZlbnRDbGlja2VkKCRldmVudC5ldmVudClcIj5cbiAgICA8L213bC1jYWxlbmRhci1tb250aC12aWV3PlxuICAgIDxtd2wtY2FsZW5kYXItd2Vlay12aWV3XG4gICAgICAqbmdTd2l0Y2hDYXNlPVwiJ3dlZWsnXCJcbiAgICAgIFt2aWV3RGF0ZV09XCJ2aWV3RGF0ZVwiXG4gICAgICBbZXZlbnRzXT1cImV2ZW50c1wiXG4gICAgICAoZXZlbnRDbGlja2VkKT1cImV2ZW50Q2xpY2tlZCgkZXZlbnQuZXZlbnQpXCI+XG4gICAgPC9td2wtY2FsZW5kYXItd2Vlay12aWV3PlxuICAgIDxtd2wtY2FsZW5kYXItZGF5LXZpZXdcbiAgICAgICpuZ1N3aXRjaENhc2U9XCInZGF5J1wiXG4gICAgICBbdmlld0RhdGVdPVwidmlld0RhdGVcIlxuICAgICAgW2V2ZW50c109XCJldmVudHNcIlxuICAgICAgKGV2ZW50Q2xpY2tlZCk9XCJldmVudENsaWNrZWQoJGV2ZW50LmV2ZW50KVwiPlxuICAgIDwvbXdsLWNhbGVuZGFyLWRheS12aWV3PlxuICA8L2Rpdj5cbjwvZGl2PiIsIjxtd2wtZGVtby1jb21wb25lbnQ+PC9td2wtZGVtby1jb21wb25lbnQ+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkNPc0IseUNBQ3BCO01BQUE7TUFBQSw0Q0FBeUI7TUFDdkI7VUFBQTtNQUEyQywyQ0FDM0M7VUFBQTtVQUFBLGdCQUFJO01BRUE7OztvQkFLSjtNQUFBO01BQUE7UUFBQTtRQUFBO1FBS0U7VUFBQTtVQUFBO1FBQUE7UUFDQTtVQUFBO1VBQUE7UUFBQTtRQU5GO01BQUE7YUFBQTt1Q0FBQTtVQUFBO01BTThDOztJQUo1QztJQUNBO0lBQ0E7SUFKRixXQUVFLFVBQ0EsVUFDQSxTQUpGOzs7O29CQVFBO01BQUE7UUFBQTtRQUFBO1FBSUU7VUFBQTtVQUFBO1FBQUE7UUFKRjtNQUFBO2FBQUE7dUNBQUE7VUFBQSwrQkFJOEM7OztRQUY1QztRQUNBO1FBSEYsV0FFRSxVQUNBLFNBSEY7Ozs7b0JBTUE7TUFBQTtRQUFBO1FBQUE7UUFJRTtVQUFBO1VBQUE7UUFBQTtRQUpGO01BQUE7YUFBQTt1Q0FBQTtVQUFBLCtCQUk4Qzs7O1FBRjVDO1FBQ0E7UUFIRixXQUVFLFVBQ0EsU0FIRjs7OztvQkFoQko7TUFBQSx3RUFBdUQ7YUFBQSwwQkFDckQ7TUFBQTtNQUFBLHVCQUFBO01BQUEsNEJBQXVCLDJDQUNyQjthQUFBO2FBQUE7cUJBQUEsbURBTzBCO1VBQUEsYUFDMUI7VUFBQSw4QkFBQTtvQ0FBQTtNQUt5QiwyQ0FDekI7VUFBQSw0REFBQTtVQUFBO2NBQUEsZ0NBS3dCO01BQ3BCOztJQXJCRDtJQUFMLFdBQUssU0FBTDtJQUVJO0lBREYsV0FDRSxTQURGO0lBU0U7SUFERixXQUNFLFNBREY7SUFPRTtJQURGLFlBQ0UsU0FERjs7OztvQkEvQko7TUFBQTtNQUFBO1FBQUE7UUFBQTtRQUNFO1VBQUE7VUFBQTtRQUFBO1FBQ0E7VUFBQTtVQUFBO1FBQUE7UUFDQTtVQUFBO1VBQUE7UUFBQTtRQUNBO1VBQUE7VUFBQTtRQUFBO1FBSkY7TUFBQTthQUFBO1VBQUE7TUFJK0IsdUNBQ0U7TUFFakM7TUFNYyx5Q0FFZDtVQUFBLDREQUFBO1VBQUE7Y0FBQSxtQ0FBSzs7O1FBZEg7UUFDQTtRQUZGLFdBQ0UsVUFDQSxTQUZGO1FBZUs7UUFBQTtRQUFMLFdBQUssbUJBQUw7Ozs7b0JDZkE7TUFBQTs4QkFBQSxVQUFBO01BQUE7SUFBQTs7OzsifQ==\n//# sourceMappingURL=component.ngfactory.js.map\n// EXTERNAL MODULE: ./node_modules/@angular/forms/@angular/forms.es5.js\nvar forms_es5 = __webpack_require__(14);\n\n// EXTERNAL MODULE: ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.js\nvar ngb_calendar = __webpack_require__(16);\n\n// EXTERNAL MODULE: ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.js\nvar datepicker_i18n = __webpack_require__(22);\n\n// EXTERNAL MODULE: ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.js\nvar ngb_date_parser_formatter = __webpack_require__(60);\n\n// EXTERNAL MODULE: ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.js\nvar datepicker_config = __webpack_require__(59);\n\n// EXTERNAL MODULE: ./node_modules/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.js\nvar timepicker_config = __webpack_require__(52);\n\n// EXTERNAL MODULE: ./node_modules/angular-draggable-droppable/dist/esm/src/draggableHelper.provider.js\nvar draggableHelper_provider = __webpack_require__(21);\n\n// EXTERNAL MODULE: ./src/providers/calendarEventTitleFormatter.provider.ts\nvar calendarEventTitleFormatter_provider = __webpack_require__(43);\n\n// EXTERNAL MODULE: ./src/providers/calendarDateFormatter.provider.ts\nvar calendarDateFormatter_provider = __webpack_require__(34);\n\n// EXTERNAL MODULE: ./node_modules/angular-resizable-element/dist/esm/src/resizable.module.js\nvar resizable_module = __webpack_require__(277);\n\n// EXTERNAL MODULE: ./node_modules/angular-draggable-droppable/dist/esm/src/dragAndDrop.module.js\nvar dragAndDrop_module = __webpack_require__(168);\n\n// EXTERNAL MODULE: ./src/calendar.module.ts + 1 modules\nvar calendar_module = __webpack_require__(274);\n\n// EXTERNAL MODULE: ./node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.js + 2 modules\nvar datepicker_module = __webpack_require__(113);\n\n// EXTERNAL MODULE: ./node_modules/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.js\nvar timepicker_module = __webpack_require__(114);\n\n// EXTERNAL MODULE: ./demos/demo-modules/demo-utils/module.ts\nvar demo_utils_module = __webpack_require__(278);\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/@angular/router.es5.js\nvar router_es5 = __webpack_require__(115);\n\n// CONCATENATED MODULE: ./dist/aot/demos/demo-modules/async-events/module.ngfactory.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DemoModuleNgFactory\", function() { return DemoModuleNgFactory; });\n/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n/* tslint:disable */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar DemoModuleNgFactory = core_es5[\"_21\" /* ɵcmf */](DemoModule, [], function (_l) {\n    return core_es5[\"_36\" /* ɵmod */]([core_es5[\"_37\" /* ɵmpd */](512, core_es5[\"m\" /* ComponentFactoryResolver */], core_es5[\"_17\" /* ɵCodegenComponentFactoryResolver */], [[8, [calendarTooltip_directive_ngfactory[\"a\" /* CalendarTooltipWindowComponentNgFactory */], datepicker_ngfactory[\"a\" /* NgbDatepickerNgFactory */],\n                    DemoComponentNgFactory]], [3, core_es5[\"m\" /* ComponentFactoryResolver */]], core_es5[\"I\" /* NgModuleRef */]]),\n        core_es5[\"_37\" /* ɵmpd */](4608, common_es5[\"o\" /* NgLocalization */], common_es5[\"n\" /* NgLocaleLocalization */], [core_es5[\"E\" /* LOCALE_ID */]]), core_es5[\"_37\" /* ɵmpd */](4608, BrowserXhr, BrowserXhr, []), core_es5[\"_37\" /* ɵmpd */](4608, ResponseOptions, http_es5_BaseResponseOptions, []), core_es5[\"_37\" /* ɵmpd */](5120, XSRFStrategy, _createDefaultCookieXSRFStrategy, []), core_es5[\"_37\" /* ɵmpd */](4608, XHRBackend, XHRBackend, [BrowserXhr,\n            ResponseOptions, XSRFStrategy]), core_es5[\"_37\" /* ɵmpd */](4608, RequestOptions, http_es5_BaseRequestOptions, []), core_es5[\"_37\" /* ɵmpd */](5120, Http, httpFactory, [XHRBackend,\n            RequestOptions]), core_es5[\"_37\" /* ɵmpd */](4608, forms_es5[\"o\" /* ɵi */], forms_es5[\"o\" /* ɵi */], []), core_es5[\"_37\" /* ɵmpd */](4608, ngb_calendar[\"a\" /* NgbCalendar */], ngb_calendar[\"b\" /* NgbCalendarGregorian */], []), core_es5[\"_37\" /* ɵmpd */](4608, datepicker_i18n[\"a\" /* NgbDatepickerI18n */], datepicker_i18n[\"b\" /* NgbDatepickerI18nDefault */], []), core_es5[\"_37\" /* ɵmpd */](4608, ngb_date_parser_formatter[\"b\" /* NgbDateParserFormatter */], ngb_date_parser_formatter[\"a\" /* NgbDateISOParserFormatter */], []), core_es5[\"_37\" /* ɵmpd */](4608, datepicker_config[\"a\" /* NgbDatepickerConfig */], datepicker_config[\"a\" /* NgbDatepickerConfig */], []), core_es5[\"_37\" /* ɵmpd */](4608, timepicker_config[\"a\" /* NgbTimepickerConfig */], timepicker_config[\"a\" /* NgbTimepickerConfig */], []), core_es5[\"_37\" /* ɵmpd */](4608, draggableHelper_provider[\"a\" /* DraggableHelper */], draggableHelper_provider[\"a\" /* DraggableHelper */], []), core_es5[\"_37\" /* ɵmpd */](4608, calendarEventTitleFormatter_provider[\"a\" /* CalendarEventTitleFormatter */], calendarEventTitleFormatter_provider[\"a\" /* CalendarEventTitleFormatter */], []), core_es5[\"_37\" /* ɵmpd */](4608, calendarDateFormatter_provider[\"a\" /* CalendarDateFormatter */], calendarDateFormatter_provider[\"a\" /* CalendarDateFormatter */], []), core_es5[\"_37\" /* ɵmpd */](4608, calendarUtils_provider[\"a\" /* CalendarUtils */], calendarUtils_provider[\"a\" /* CalendarUtils */], []), core_es5[\"_37\" /* ɵmpd */](512, common_es5[\"c\" /* CommonModule */], common_es5[\"c\" /* CommonModule */], []), core_es5[\"_37\" /* ɵmpd */](512, HttpModule, HttpModule, []),\n        core_es5[\"_37\" /* ɵmpd */](512, resizable_module[\"a\" /* ResizableModule */], resizable_module[\"a\" /* ResizableModule */], []), core_es5[\"_37\" /* ɵmpd */](512, dragAndDrop_module[\"a\" /* DragAndDropModule */], dragAndDrop_module[\"a\" /* DragAndDropModule */], []), core_es5[\"_37\" /* ɵmpd */](512, calendar_module[\"a\" /* CalendarModule */], calendar_module[\"a\" /* CalendarModule */], []), core_es5[\"_37\" /* ɵmpd */](512, forms_es5[\"m\" /* ɵba */], forms_es5[\"m\" /* ɵba */], []), core_es5[\"_37\" /* ɵmpd */](512, forms_es5[\"d\" /* FormsModule */], forms_es5[\"d\" /* FormsModule */], []),\n        core_es5[\"_37\" /* ɵmpd */](512, datepicker_module[\"a\" /* NgbDatepickerModule */], datepicker_module[\"a\" /* NgbDatepickerModule */], []),\n        core_es5[\"_37\" /* ɵmpd */](512, timepicker_module[\"a\" /* NgbTimepickerModule */], timepicker_module[\"a\" /* NgbTimepickerModule */], []),\n        core_es5[\"_37\" /* ɵmpd */](512, demo_utils_module[\"a\" /* DemoUtilsModule */], demo_utils_module[\"a\" /* DemoUtilsModule */], []), core_es5[\"_37\" /* ɵmpd */](512, router_es5[\"o\" /* RouterModule */], router_es5[\"o\" /* RouterModule */], [[2, router_es5[\"t\" /* ɵa */]], [2, router_es5[\"m\" /* Router */]]]), core_es5[\"_37\" /* ɵmpd */](512, DemoModule, DemoModule, []), core_es5[\"_37\" /* ɵmpd */](1024, router_es5[\"k\" /* ROUTES */], function () {\n            return [[{ path: '', component: component_DemoComponent }]];\n        }, [])]);\n});\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL21hdHRsZXdpcy9Db2RlL29wZW4tc291cmNlL2FuZ3VsYXItY2FsZW5kYXIvZGVtb3MvZGVtby1tb2R1bGVzL2FzeW5jLWV2ZW50cy9tb2R1bGUubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvbWF0dGxld2lzL0NvZGUvb3Blbi1zb3VyY2UvYW5ndWxhci1jYWxlbmRhci9kZW1vcy9kZW1vLW1vZHVsZXMvYXN5bmMtZXZlbnRzL21vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIgIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9\n//# sourceMappingURL=module.ngfactory.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 63-b2c12e4442558ceed9df.js","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.3.6\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ɵgetDOM } from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\nvar RequestMethod = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\nvar ReadyState = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\nvar ResponseType = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\nvar ContentType = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\nvar ResponseContentType = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * \\@experimental\n */\nvar Headers = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function Headers(headers) {\n        var _this = this;\n        /**\n         * \\@internal header names are lower case\n         */\n        this._headers = new Map();\n        /**\n         * \\@internal map lower case names to actual names\n         */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var /** @type {?} */ headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var /** @type {?} */ index = line.indexOf(':');\n            if (index > 0) {\n                var /** @type {?} */ name = line.slice(0, index);\n                var /** @type {?} */ value = line.slice(index + 1).trim();\n                headers.set(name, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.append = function (name, value) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.delete = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.get = function (name) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * @return {?}\n     */\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var /** @type {?} */ serialized = {};\n        this._headers.forEach(function (values, name) {\n            var /** @type {?} */ split = [];\n            values.forEach(function (v) { return split.push.apply(split, v.split(',')); });\n            serialized[((_this._normalizedNames.get(name)))] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * \\@experimental\n */\nvar ResponseOptions = (function () {\n    /**\n     * @param {?=} opts\n     */\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * \\@experimental\n */\nvar BaseResponseOptions = (function (_super) {\n    tslib_1.__extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    return BaseResponseOptions;\n}(ResponseOptions));\nBaseResponseOptions.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBaseResponseOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * \\@experimental\n * @abstract\n */\nvar ConnectionBackend = (function () {\n    function ConnectionBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} request\n     * @return {?}\n     */\n    ConnectionBackend.prototype.createConnection = function (request) { };\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * \\@experimental\n * @abstract\n */\nvar Connection = (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * \\@experimental\n * @abstract\n */\nvar XSRFStrategy = (function () {\n    function XSRFStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    XSRFStrategy.prototype.configureRequest = function (req) { };\n    return XSRFStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} method\n * @return {?}\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\n/**\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stringToArrayBuffer(input) {\n    var /** @type {?} */ view = new Uint16Array(input.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var /** @type {?} */ map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * \\@experimental\n *\n */\nvar QueryEncoder = (function () {\n    function QueryEncoder() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    return QueryEncoder;\n}());\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\nvar URLSearchParams = (function () {\n    /**\n     * @param {?=} rawParams\n     * @param {?=} queryEncoder\n     */\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.clone = function () {\n        var /** @type {?} */ clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.get = function (param) {\n        var /** @type {?} */ storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var /** @type {?} */ paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nvar Body = (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(/** @type {?} */ (this._body));\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     * @param {?=} encodingHint\n     * @return {?}\n     */\n    Body.prototype.text = function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(/** @type {?} */ (this._body)));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(/** @type {?} */ (this._body)));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return (this._body);\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return (this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * \\@experimental\n */\nvar Response = (function (_super) {\n    tslib_1.__extends(Response, _super);\n    /**\n     * @param {?} responseOptions\n     */\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */ w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\nvar BrowserJsonp = (function () {\n    function BrowserJsonp() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserJsonp.prototype.build = function (url) {\n        var /** @type {?} */ node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    /**\n     * @return {?}\n     */\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild(/** @type {?} */ ((node))); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(/** @type {?} */ ((node)));\n        }\n    };\n    return BrowserJsonp;\n}());\nBrowserJsonp.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserJsonp.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPConnection = (function () {\n    function JSONPConnection() {\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @abstract\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection.prototype.finished = function (data) { };\n    return JSONPConnection;\n}());\nvar JSONPConnection_ = (function (_super) {\n    tslib_1.__extends(JSONPConnection_, _super);\n    /**\n     * @param {?} req\n     * @param {?} _dom\n     * @param {?=} baseResponseOptions\n     */\n    function JSONPConnection_(req, _dom, baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._dom = _dom;\n        _this.baseResponseOptions = baseResponseOptions;\n        _this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        _this.request = req;\n        _this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n        return _this;\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection_.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection_;\n}(JSONPConnection));\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPBackend = (function (_super) {\n    tslib_1.__extends(JSONPBackend, _super);\n    function JSONPBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return JSONPBackend;\n}(ConnectionBackend));\nvar JSONPBackend_ = (function (_super) {\n    tslib_1.__extends(JSONPBackend_, _super);\n    /**\n     * @param {?} _browserJSONP\n     * @param {?} _baseResponseOptions\n     */\n    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    JSONPBackend_.prototype.createConnection = function (request) {\n        return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    return JSONPBackend_;\n}(JSONPBackend));\nJSONPBackend_.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJSONPBackend_.ctorParameters = function () { return [\n    { type: BrowserJsonp, },\n    { type: ResponseOptions, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * \\@experimental\n */\nvar XHRConnection = (function () {\n    /**\n     * @param {?} req\n     * @param {?} browserXHR\n     * @param {?=} baseResponseOptions\n     */\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var /** @type {?} */ blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * \\@experimental\n */\nvar CookieXSRFStrategy = (function () {\n    /**\n     * @param {?=} _cookieName\n     * @param {?=} _headerName\n     */\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var /** @type {?} */ xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\nvar XHRBackend = (function () {\n    /**\n     * @param {?} _browserXHR\n     * @param {?} _baseResponseOptions\n     * @param {?} _xsrfStrategy\n     */\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    return XHRBackend;\n}());\nXHRBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nXHRBackend.ctorParameters = function () { return [\n    { type: BrowserXhr, },\n    { type: ResponseOptions, },\n    { type: XSRFStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar RequestOptions = (function () {\n    /**\n     * @param {?=} opts\n     */\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    /**\n     * @param {?=} params\n     * @return {?}\n     */\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    /**\n     * @param {?=} objParams\n     * @return {?}\n     */\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var /** @type {?} */ params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var /** @type {?} */ value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '\\@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar BaseRequestOptions = (function (_super) {\n    tslib_1.__extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    return BaseRequestOptions;\n}(RequestOptions));\nBaseRequestOptions.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBaseRequestOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * \\@experimental\n */\nvar Request = (function (_super) {\n    tslib_1.__extends(Request, _super);\n    /**\n     * @param {?} requestOptions\n     */\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\n/**\n * @param {?} params\n * @return {?}\n */\nfunction urlEncodeParams(params) {\n    var /** @type {?} */ searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var /** @type {?} */ value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = ((w) /** TODO #9100 */)['FormData'] || noop;\nvar Blob$1 = ((w) /** TODO #9100 */)['Blob'] || noop;\nvar ArrayBuffer$1 = ((w) /** TODO #9100 */)['ArrayBuffer'] || noop;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */ newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return (newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        })));\n    }\n    return (newOptions.merge(new RequestOptions({ method: method, url: url })));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * \\@experimental\n */\nvar Http = (function () {\n    /**\n     * @param {?} _backend\n     * @param {?} _defaultOptions\n     */\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url))));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    return Http;\n}());\nHttp.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * \\@experimental\n */\nvar Jsonp = (function (_super) {\n    tslib_1.__extends(Jsonp, _super);\n    /**\n     * @param {?} backend\n     * @param {?} defaultOptions\n     */\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url)));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    return Jsonp;\n}(Http));\nJsonp.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The http module provides services to perform http requests. To get started, see the {@link Http}\n * class.\n */\n/**\n * @return {?}\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * \\@experimental\n */\nvar HttpModule = (function () {\n    function HttpModule() {\n    }\n    return HttpModule;\n}());\nHttpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                    BrowserXhr,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    XHRBackend,\n                    { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpModule.ctorParameters = function () { return []; };\n/**\n * The module that includes jsonp's providers\n *\n * \\@experimental\n */\nvar JsonpModule = (function () {\n    function JsonpModule() {\n    }\n    return JsonpModule;\n}());\nJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                    BrowserJsonp,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    { provide: JSONPBackend, useClass: JSONPBackend_ },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.3.6');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the http package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION, BrowserJsonp as ɵg, JSONPBackend_ as ɵa, Body as ɵf, _createDefaultCookieXSRFStrategy as ɵb, httpFactory as ɵc, jsonpFactory as ɵd };\n//# sourceMappingURL=http.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/http/@angular/http.es5.js\n// module id = null\n// module chunks = ","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as i0 from '@angular/core';\nimport * as i1 from '../../../src/components/month/calendarMonthView.component.ngfactory';\nimport * as i2 from '../../../../../src/components/month/calendarMonthView.component';\nimport * as i3 from '../../../../../src/providers/calendarUtils.provider';\nimport * as i4 from '../../../src/components/week/calendarWeekView.component.ngfactory';\nimport * as i5 from '../../../../../src/components/week/calendarWeekView.component';\nimport * as i6 from '../../../src/components/day/calendarDayView.component.ngfactory';\nimport * as i7 from '../../../../../src/components/day/calendarDayView.component';\nimport * as i8 from '@angular/common';\nimport * as i9 from '../../../../../demos/demo-modules/async-events/component';\nimport * as i10 from '../demo-utils/calendar-header.component.ngfactory';\nimport * as i11 from '../../../../../demos/demo-modules/demo-utils/calendar-header.component';\nimport * as i12 from '@angular/http';\nconst styles_DemoComponent:any[] = ([] as any[]);\nexport const RenderType_DemoComponent:i0.RendererType2 = i0.ɵcrt({encapsulation:2,\n    styles:styles_DemoComponent,data:{}});\nfunction View_DemoComponent_1(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵted((null as any),['\\n  '])),(_l()(),i0.ɵeld(0,(null as any),\n      (null as any),5,'div',[['class','text-center']],(null as any),(null as any),\n      (null as any),(null as any),(null as any))),(_l()(),i0.ɵted((null as any),['\\n    '])),\n      (_l()(),i0.ɵeld(0,(null as any),(null as any),0,'i',[['class','fa fa-spin fa-spinner fa-5x']],\n          (null as any),(null as any),(null as any),(null as any),(null as any))),\n      (_l()(),i0.ɵted((null as any),['\\n    '])),(_l()(),i0.ɵeld(0,(null as any),(null as any),\n          0,'br',([] as any[]),(null as any),(null as any),(null as any),(null as any),\n          (null as any))),(_l()(),i0.ɵted((null as any),['\\n    Loading events...\\n  '])),\n      (_l()(),i0.ɵted((null as any),['\\n']))],(null as any),(null as any));\n}\nfunction View_DemoComponent_3(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),2,'mwl-calendar-month-view',\n      ([] as any[]),(null as any),[[(null as any),'dayClicked'],[(null as any),'eventClicked']],\n      (_v,en,$event) => {\n        var ad:boolean = true;\n        var _co:any = _v.component;\n        if (('dayClicked' === en)) {\n          const pd_0:any = ((<any>_co.dayClicked($event.day)) !== false);\n          ad = (pd_0 && ad);\n        }\n        if (('eventClicked' === en)) {\n          const pd_1:any = ((<any>_co.eventClicked($event.event)) !== false);\n          ad = (pd_1 && ad);\n        }\n        return ad;\n      },i1.View_CalendarMonthViewComponent_0,i1.RenderType_CalendarMonthViewComponent)),\n      i0.ɵdid(770048,(null as any),0,i2.CalendarMonthViewComponent,[i0.ChangeDetectorRef,\n          i3.CalendarUtils,i0.LOCALE_ID],{viewDate:[0,'viewDate'],events:[1,'events'],\n          activeDayIsOpen:[2,'activeDayIsOpen']},{dayClicked:'dayClicked',eventClicked:'eventClicked'}),\n      (_l()(),i0.ɵted((null as any),['\\n    ']))],(_ck,_v) => {\n    var _co:any = _v.component;\n    const currVal_0:any = _co.viewDate;\n    const currVal_1:any = (<any>_v.parent).context.$implicit;\n    const currVal_2:any = _co.activeDayIsOpen;\n    _ck(_v,1,0,currVal_0,currVal_1,currVal_2);\n  },(null as any));\n}\nfunction View_DemoComponent_4(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),2,'mwl-calendar-week-view',\n      ([] as any[]),(null as any),[[(null as any),'eventClicked']],(_v,en,$event) => {\n        var ad:boolean = true;\n        var _co:any = _v.component;\n        if (('eventClicked' === en)) {\n          const pd_0:any = ((<any>_co.eventClicked($event.event)) !== false);\n          ad = (pd_0 && ad);\n        }\n        return ad;\n      },i4.View_CalendarWeekViewComponent_0,i4.RenderType_CalendarWeekViewComponent)),\n      i0.ɵdid(770048,(null as any),0,i5.CalendarWeekViewComponent,[i0.ChangeDetectorRef,\n          i3.CalendarUtils,i0.LOCALE_ID],{viewDate:[0,'viewDate'],events:[1,'events']},\n          {eventClicked:'eventClicked'}),(_l()(),i0.ɵted((null as any),['\\n    ']))],\n      (_ck,_v) => {\n        var _co:any = _v.component;\n        const currVal_0:any = _co.viewDate;\n        const currVal_1:any = (<any>_v.parent).context.$implicit;\n        _ck(_v,1,0,currVal_0,currVal_1);\n      },(null as any));\n}\nfunction View_DemoComponent_5(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),2,'mwl-calendar-day-view',\n      ([] as any[]),(null as any),[[(null as any),'eventClicked']],(_v,en,$event) => {\n        var ad:boolean = true;\n        var _co:any = _v.component;\n        if (('eventClicked' === en)) {\n          const pd_0:any = ((<any>_co.eventClicked($event.event)) !== false);\n          ad = (pd_0 && ad);\n        }\n        return ad;\n      },i6.View_CalendarDayViewComponent_0,i6.RenderType_CalendarDayViewComponent)),\n      i0.ɵdid(770048,(null as any),0,i7.CalendarDayViewComponent,[i0.ChangeDetectorRef,\n          i3.CalendarUtils,i0.LOCALE_ID],{viewDate:[0,'viewDate'],events:[1,'events']},\n          {eventClicked:'eventClicked'}),(_l()(),i0.ɵted((null as any),['\\n    ']))],\n      (_ck,_v) => {\n        var _co:any = _v.component;\n        const currVal_0:any = _co.viewDate;\n        const currVal_1:any = (<any>_v.parent).context.$implicit;\n        _ck(_v,1,0,currVal_0,currVal_1);\n      },(null as any));\n}\nfunction View_DemoComponent_2(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),14,'div',([] as any[]),\n      (null as any),(null as any),(null as any),(null as any),(null as any))),(_l()(),\n      i0.ɵted((null as any),['\\n  '])),(_l()(),i0.ɵeld(0,(null as any),(null as any),\n      11,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),\n      (null as any))),i0.ɵdid(16384,(null as any),0,i8.NgSwitch,([] as any[]),{ngSwitch:[0,\n      'ngSwitch']},(null as any)),(_l()(),i0.ɵted((null as any),['\\n    '])),(_l()(),\n      i0.ɵand(16777216,(null as any),(null as any),1,(null as any),View_DemoComponent_3)),\n      i0.ɵdid(278528,(null as any),0,i8.NgSwitchCase,[i0.ViewContainerRef,i0.TemplateRef,\n          i8.NgSwitch],{ngSwitchCase:[0,'ngSwitchCase']},(null as any)),(_l()(),i0.ɵted((null as any),\n          ['\\n    '])),(_l()(),i0.ɵand(16777216,(null as any),(null as any),1,(null as any),\n          View_DemoComponent_4)),i0.ɵdid(278528,(null as any),0,i8.NgSwitchCase,[i0.ViewContainerRef,\n          i0.TemplateRef,i8.NgSwitch],{ngSwitchCase:[0,'ngSwitchCase']},(null as any)),\n      (_l()(),i0.ɵted((null as any),['\\n    '])),(_l()(),i0.ɵand(16777216,(null as any),\n          (null as any),1,(null as any),View_DemoComponent_5)),i0.ɵdid(278528,(null as any),\n          0,i8.NgSwitchCase,[i0.ViewContainerRef,i0.TemplateRef,i8.NgSwitch],{ngSwitchCase:[0,\n              'ngSwitchCase']},(null as any)),(_l()(),i0.ɵted((null as any),['\\n  '])),\n      (_l()(),i0.ɵted((null as any),['\\n']))],(_ck,_v) => {\n    var _co:any = _v.component;\n    const currVal_0:any = _co.view;\n    _ck(_v,3,0,currVal_0);\n    const currVal_1:any = 'month';\n    _ck(_v,6,0,currVal_1);\n    const currVal_2:any = 'week';\n    _ck(_v,9,0,currVal_2);\n    const currVal_3:any = 'day';\n    _ck(_v,12,0,currVal_3);\n  },(null as any));\n}\nexport function View_DemoComponent_0(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(2,[(_l()(),i0.ɵeld(0,(null as any),(null as any),2,'mwl-demo-utils-calendar-header',\n      ([] as any[]),(null as any),[[(null as any),'viewChange'],[(null as any),'viewDateChange']],\n      (_v,en,$event) => {\n        var ad:boolean = true;\n        var _co:i9.DemoComponent = _v.component;\n        if (('viewChange' === en)) {\n          const pd_0:any = ((<any>(_co.view = $event)) !== false);\n          ad = (pd_0 && ad);\n        }\n        if (('viewDateChange' === en)) {\n          const pd_1:any = ((<any>(_co.viewDate = $event)) !== false);\n          ad = (pd_1 && ad);\n        }\n        if (('viewDateChange' === en)) {\n          const pd_2:any = ((<any>_co.fetchEvents()) !== false);\n          ad = (pd_2 && ad);\n        }\n        if (('viewChange' === en)) {\n          const pd_3:any = ((<any>_co.fetchEvents()) !== false);\n          ad = (pd_3 && ad);\n        }\n        return ad;\n      },i10.View_CalendarHeaderComponent_0,i10.RenderType_CalendarHeaderComponent)),\n      i0.ɵdid(49152,(null as any),0,i11.CalendarHeaderComponent,([] as any[]),{view:[0,\n          'view'],viewDate:[1,'viewDate']},{viewChange:'viewChange',viewDateChange:'viewDateChange'}),\n      (_l()(),i0.ɵted((null as any),['\\n'])),(_l()(),i0.ɵted((null as any),['\\n\\n'])),\n      (_l()(),i0.ɵand(0,[['loading',2]],(null as any),0,(null as any),View_DemoComponent_1)),\n      (_l()(),i0.ɵted((null as any),['\\n\\n'])),(_l()(),i0.ɵand(16777216,(null as any),\n          (null as any),2,(null as any),View_DemoComponent_2)),i0.ɵdid(16384,(null as any),\n          0,i8.NgIf,[i0.ViewContainerRef,i0.TemplateRef],{ngIf:[0,'ngIf'],ngIfElse:[1,\n              'ngIfElse']},(null as any)),i0.ɵpid(131072,i8.AsyncPipe,[i0.ChangeDetectorRef])],\n      (_ck,_v) => {\n        var _co:i9.DemoComponent = _v.component;\n        const currVal_0:any = _co.view;\n        const currVal_1:any = _co.viewDate;\n        _ck(_v,1,0,currVal_0,currVal_1);\n        const currVal_2:any = i0.ɵunv(_v,7,0,i0.ɵnov(_v,8).transform(_co.events$));\n        const currVal_3:any = i0.ɵnov(_v,4);\n        _ck(_v,7,0,currVal_2,currVal_3);\n      },(null as any));\n}\nexport function View_DemoComponent_Host_0(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,(null as any),(null as any),1,'mwl-demo-component',\n      ([] as any[]),(null as any),(null as any),(null as any),View_DemoComponent_0,\n      RenderType_DemoComponent)),i0.ɵdid(114688,(null as any),0,i9.DemoComponent,[i12.Http],\n      (null as any),(null as any))],(_ck,_v) => {\n    _ck(_v,1,0);\n  },(null as any));\n}\nexport const DemoComponentNgFactory:i0.ComponentFactory<i9.DemoComponent> = i0.ɵccf('mwl-demo-component',\n    i9.DemoComponent,View_DemoComponent_Host_0,{},{},([] as any[]));\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL21hdHRsZXdpcy9Db2RlL29wZW4tc291cmNlL2FuZ3VsYXItY2FsZW5kYXIvZGVtb3MvZGVtby1tb2R1bGVzL2FzeW5jLWV2ZW50cy9jb21wb25lbnQubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvbWF0dGxld2lzL0NvZGUvb3Blbi1zb3VyY2UvYW5ndWxhci1jYWxlbmRhci9kZW1vcy9kZW1vLW1vZHVsZXMvYXN5bmMtZXZlbnRzL2NvbXBvbmVudC50cyIsIm5nOi8vL1VzZXJzL21hdHRsZXdpcy9Db2RlL29wZW4tc291cmNlL2FuZ3VsYXItY2FsZW5kYXIvZGVtb3MvZGVtby1tb2R1bGVzL2FzeW5jLWV2ZW50cy90ZW1wbGF0ZS5odG1sIiwibmc6Ly8vVXNlcnMvbWF0dGxld2lzL0NvZGUvb3Blbi1zb3VyY2UvYW5ndWxhci1jYWxlbmRhci9kZW1vcy9kZW1vLW1vZHVsZXMvYXN5bmMtZXZlbnRzL2NvbXBvbmVudC50cy5EZW1vQ29tcG9uZW50X0hvc3QuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyIgIiwiPG13bC1kZW1vLXV0aWxzLWNhbGVuZGFyLWhlYWRlclxuICBbKHZpZXcpXT1cInZpZXdcIlxuICBbKHZpZXdEYXRlKV09XCJ2aWV3RGF0ZVwiXG4gICh2aWV3RGF0ZUNoYW5nZSk9XCJmZXRjaEV2ZW50cygpXCJcbiAgKHZpZXdDaGFuZ2UpPVwiZmV0Y2hFdmVudHMoKVwiPlxuPC9td2wtZGVtby11dGlscy1jYWxlbmRhci1oZWFkZXI+XG5cbjxuZy10ZW1wbGF0ZSAjbG9hZGluZz5cbiAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyXCI+XG4gICAgPGkgY2xhc3M9XCJmYSBmYS1zcGluIGZhLXNwaW5uZXIgZmEtNXhcIj48L2k+XG4gICAgPGJyPlxuICAgIExvYWRpbmcgZXZlbnRzLi4uXG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPGRpdiAqbmdJZj1cImV2ZW50cyQgfCBhc3luYzsgZWxzZSBsb2FkaW5nOyBsZXQgZXZlbnRzXCI+XG4gIDxkaXYgW25nU3dpdGNoXT1cInZpZXdcIj5cbiAgICA8bXdsLWNhbGVuZGFyLW1vbnRoLXZpZXdcbiAgICAgICpuZ1N3aXRjaENhc2U9XCInbW9udGgnXCJcbiAgICAgIFt2aWV3RGF0ZV09XCJ2aWV3RGF0ZVwiXG4gICAgICBbZXZlbnRzXT1cImV2ZW50c1wiXG4gICAgICBbYWN0aXZlRGF5SXNPcGVuXT1cImFjdGl2ZURheUlzT3BlblwiXG4gICAgICAoZGF5Q2xpY2tlZCk9XCJkYXlDbGlja2VkKCRldmVudC5kYXkpXCJcbiAgICAgIChldmVudENsaWNrZWQpPVwiZXZlbnRDbGlja2VkKCRldmVudC5ldmVudClcIj5cbiAgICA8L213bC1jYWxlbmRhci1tb250aC12aWV3PlxuICAgIDxtd2wtY2FsZW5kYXItd2Vlay12aWV3XG4gICAgICAqbmdTd2l0Y2hDYXNlPVwiJ3dlZWsnXCJcbiAgICAgIFt2aWV3RGF0ZV09XCJ2aWV3RGF0ZVwiXG4gICAgICBbZXZlbnRzXT1cImV2ZW50c1wiXG4gICAgICAoZXZlbnRDbGlja2VkKT1cImV2ZW50Q2xpY2tlZCgkZXZlbnQuZXZlbnQpXCI+XG4gICAgPC9td2wtY2FsZW5kYXItd2Vlay12aWV3PlxuICAgIDxtd2wtY2FsZW5kYXItZGF5LXZpZXdcbiAgICAgICpuZ1N3aXRjaENhc2U9XCInZGF5J1wiXG4gICAgICBbdmlld0RhdGVdPVwidmlld0RhdGVcIlxuICAgICAgW2V2ZW50c109XCJldmVudHNcIlxuICAgICAgKGV2ZW50Q2xpY2tlZCk9XCJldmVudENsaWNrZWQoJGV2ZW50LmV2ZW50KVwiPlxuICAgIDwvbXdsLWNhbGVuZGFyLWRheS12aWV3PlxuICA8L2Rpdj5cbjwvZGl2PiIsIjxtd2wtZGVtby1jb21wb25lbnQ+PC9td2wtZGVtby1jb21wb25lbnQ+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkNPc0IseUNBQ3BCO01BQUE7TUFBQSw0Q0FBeUI7TUFDdkI7VUFBQTtNQUEyQywyQ0FDM0M7VUFBQTtVQUFBLGdCQUFJO01BRUE7OztvQkFLSjtNQUFBO01BQUE7UUFBQTtRQUFBO1FBS0U7VUFBQTtVQUFBO1FBQUE7UUFDQTtVQUFBO1VBQUE7UUFBQTtRQU5GO01BQUE7YUFBQTt1Q0FBQTtVQUFBO01BTThDOztJQUo1QztJQUNBO0lBQ0E7SUFKRixXQUVFLFVBQ0EsVUFDQSxTQUpGOzs7O29CQVFBO01BQUE7UUFBQTtRQUFBO1FBSUU7VUFBQTtVQUFBO1FBQUE7UUFKRjtNQUFBO2FBQUE7dUNBQUE7VUFBQSwrQkFJOEM7OztRQUY1QztRQUNBO1FBSEYsV0FFRSxVQUNBLFNBSEY7Ozs7b0JBTUE7TUFBQTtRQUFBO1FBQUE7UUFJRTtVQUFBO1VBQUE7UUFBQTtRQUpGO01BQUE7YUFBQTt1Q0FBQTtVQUFBLCtCQUk4Qzs7O1FBRjVDO1FBQ0E7UUFIRixXQUVFLFVBQ0EsU0FIRjs7OztvQkFoQko7TUFBQSx3RUFBdUQ7YUFBQSwwQkFDckQ7TUFBQTtNQUFBLHVCQUFBO01BQUEsNEJBQXVCLDJDQUNyQjthQUFBO2FBQUE7cUJBQUEsbURBTzBCO1VBQUEsYUFDMUI7VUFBQSw4QkFBQTtvQ0FBQTtNQUt5QiwyQ0FDekI7VUFBQSw0REFBQTtVQUFBO2NBQUEsZ0NBS3dCO01BQ3BCOztJQXJCRDtJQUFMLFdBQUssU0FBTDtJQUVJO0lBREYsV0FDRSxTQURGO0lBU0U7SUFERixXQUNFLFNBREY7SUFPRTtJQURGLFlBQ0UsU0FERjs7OztvQkEvQko7TUFBQTtNQUFBO1FBQUE7UUFBQTtRQUNFO1VBQUE7VUFBQTtRQUFBO1FBQ0E7VUFBQTtVQUFBO1FBQUE7UUFDQTtVQUFBO1VBQUE7UUFBQTtRQUNBO1VBQUE7VUFBQTtRQUFBO1FBSkY7TUFBQTthQUFBO1VBQUE7TUFJK0IsdUNBQ0U7TUFFakM7TUFNYyx5Q0FFZDtVQUFBLDREQUFBO1VBQUE7Y0FBQSxtQ0FBSzs7O1FBZEg7UUFDQTtRQUZGLFdBQ0UsVUFDQSxTQUZGO1FBZUs7UUFBQTtRQUFMLFdBQUssbUJBQUw7Ozs7b0JDZkE7TUFBQTs4QkFBQSxVQUFBO01BQUE7SUFBQTs7OzsifQ==\n\n\n\n// WEBPACK FOOTER //\n// ./dist/aot/demos/demo-modules/async-events/component.ngfactory.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpModule,\n    CalendarModule.forRoot(),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }])\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent]\n})\nexport class DemoModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./demos/demo-modules/async-events/module.ts","import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { Http, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { CalendarEvent } from 'angular-calendar';\nimport {\n  isSameMonth,\n  isSameDay,\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  startOfDay,\n  endOfDay,\n  format\n} from 'date-fns';\nimport { Observable } from 'rxjs/Observable';\nimport { colors } from '../demo-utils/colors';\n\ninterface Film {\n  id: number;\n  title: string;\n  release_date: string;\n}\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html'\n})\nexport class DemoComponent implements OnInit {\n  view: string = 'month';\n\n  viewDate: Date = new Date();\n\n  events$: Observable<Array<CalendarEvent<{ film: Film }>>>;\n\n  activeDayIsOpen: boolean = false;\n\n  constructor(private http: Http) {}\n\n  ngOnInit(): void {\n    this.fetchEvents();\n  }\n\n  fetchEvents(): void {\n    const getStart: any = {\n      month: startOfMonth,\n      week: startOfWeek,\n      day: startOfDay\n    }[this.view];\n\n    const getEnd: any = {\n      month: endOfMonth,\n      week: endOfWeek,\n      day: endOfDay\n    }[this.view];\n\n    const search: URLSearchParams = new URLSearchParams();\n    search.set(\n      'primary_release_date.gte',\n      format(getStart(this.viewDate), 'YYYY-MM-DD')\n    );\n    search.set(\n      'primary_release_date.lte',\n      format(getEnd(this.viewDate), 'YYYY-MM-DD')\n    );\n    search.set('api_key', '0ec33936a68018857d727958dca1424f');\n    this.events$ = this.http\n      .get('https://api.themoviedb.org/3/discover/movie', { search })\n      .map(res => res.json())\n      .map(({ results }: { results: Film[] }) => {\n        return results.map((film: Film) => {\n          return {\n            title: film.title,\n            start: new Date(film.release_date),\n            color: colors.yellow,\n            meta: {\n              film\n            }\n          };\n        });\n      });\n  }\n\n  dayClicked({\n    date,\n    events\n  }: {\n    date: Date;\n    events: Array<CalendarEvent<{ film: Film }>>;\n  }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n        this.viewDate = date;\n      }\n    }\n  }\n\n  eventClicked(event: CalendarEvent<{ film: Film }>): void {\n    window.open(\n      `https://www.themoviedb.org/movie/${event.meta.film.id}`,\n      '_blank'\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./demos/demo-modules/async-events/component.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as i0 from '@angular/core';\nimport * as i1 from '../../../../../demos/demo-modules/async-events/module';\nimport * as i2 from '../../../src/directives/calendarTooltip.directive.ngfactory';\nimport * as i3 from '../../../node_modules/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ngfactory';\nimport * as i4 from './component.ngfactory';\nimport * as i5 from '@angular/common';\nimport * as i6 from '@angular/http';\nimport * as i7 from '@angular/forms';\nimport * as i8 from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';\nimport * as i9 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n';\nimport * as i10 from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter';\nimport * as i11 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config';\nimport * as i12 from '@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config';\nimport * as i13 from 'angular-draggable-droppable/dist/esm/src/draggableHelper.provider';\nimport * as i14 from '../../../../../src/providers/calendarEventTitleFormatter.provider';\nimport * as i15 from '../../../../../src/providers/calendarDateFormatter.provider';\nimport * as i16 from '../../../../../src/providers/calendarUtils.provider';\nimport * as i17 from 'angular-resizable-element/dist/esm/src/resizable.module';\nimport * as i18 from 'angular-draggable-droppable/dist/esm/src/dragAndDrop.module';\nimport * as i19 from '../../../../../src/calendar.module';\nimport * as i20 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module';\nimport * as i21 from '@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module';\nimport * as i22 from '../../../../../demos/demo-modules/demo-utils/module';\nimport * as i23 from '@angular/router';\nimport * as i24 from '../../../../../demos/demo-modules/async-events/component';\nexport const DemoModuleNgFactory:i0.NgModuleFactory<i1.DemoModule> = i0.ɵcmf(i1.DemoModule,\n    ([] as any[]),(_l:any) => {\n      return i0.ɵmod([i0.ɵmpd(512,i0.ComponentFactoryResolver,i0.ɵCodegenComponentFactoryResolver,\n          [[8,[i2.CalendarTooltipWindowComponentNgFactory,i3.NgbDatepickerNgFactory,\n              i4.DemoComponentNgFactory]],[3,i0.ComponentFactoryResolver],i0.NgModuleRef]),\n          i0.ɵmpd(4608,i5.NgLocalization,i5.NgLocaleLocalization,[i0.LOCALE_ID]),i0.ɵmpd(4608,\n              i6.BrowserXhr,i6.BrowserXhr,([] as any[])),i0.ɵmpd(4608,i6.ResponseOptions,\n              i6.BaseResponseOptions,([] as any[])),i0.ɵmpd(5120,i6.XSRFStrategy,i6.ɵb,\n              ([] as any[])),i0.ɵmpd(4608,i6.XHRBackend,i6.XHRBackend,[i6.BrowserXhr,\n              i6.ResponseOptions,i6.XSRFStrategy]),i0.ɵmpd(4608,i6.RequestOptions,\n              i6.BaseRequestOptions,([] as any[])),i0.ɵmpd(5120,i6.Http,i6.ɵc,[i6.XHRBackend,\n              i6.RequestOptions]),i0.ɵmpd(4608,i7.ɵi,i7.ɵi,([] as any[])),i0.ɵmpd(4608,\n              i8.NgbCalendar,i8.NgbCalendarGregorian,([] as any[])),i0.ɵmpd(4608,i9.NgbDatepickerI18n,\n              i9.NgbDatepickerI18nDefault,([] as any[])),i0.ɵmpd(4608,i10.NgbDateParserFormatter,\n              i10.NgbDateISOParserFormatter,([] as any[])),i0.ɵmpd(4608,i11.NgbDatepickerConfig,\n              i11.NgbDatepickerConfig,([] as any[])),i0.ɵmpd(4608,i12.NgbTimepickerConfig,\n              i12.NgbTimepickerConfig,([] as any[])),i0.ɵmpd(4608,i13.DraggableHelper,\n              i13.DraggableHelper,([] as any[])),i0.ɵmpd(4608,i14.CalendarEventTitleFormatter,\n              i14.CalendarEventTitleFormatter,([] as any[])),i0.ɵmpd(4608,i15.CalendarDateFormatter,\n              i15.CalendarDateFormatter,([] as any[])),i0.ɵmpd(4608,i16.CalendarUtils,\n              i16.CalendarUtils,([] as any[])),i0.ɵmpd(512,i5.CommonModule,i5.CommonModule,\n              ([] as any[])),i0.ɵmpd(512,i6.HttpModule,i6.HttpModule,([] as any[])),\n          i0.ɵmpd(512,i17.ResizableModule,i17.ResizableModule,([] as any[])),i0.ɵmpd(512,\n              i18.DragAndDropModule,i18.DragAndDropModule,([] as any[])),i0.ɵmpd(512,\n              i19.CalendarModule,i19.CalendarModule,([] as any[])),i0.ɵmpd(512,i7.ɵba,\n              i7.ɵba,([] as any[])),i0.ɵmpd(512,i7.FormsModule,i7.FormsModule,([] as any[])),\n          i0.ɵmpd(512,i20.NgbDatepickerModule,i20.NgbDatepickerModule,([] as any[])),\n          i0.ɵmpd(512,i21.NgbTimepickerModule,i21.NgbTimepickerModule,([] as any[])),\n          i0.ɵmpd(512,i22.DemoUtilsModule,i22.DemoUtilsModule,([] as any[])),i0.ɵmpd(512,\n              i23.RouterModule,i23.RouterModule,[[2,i23.ɵa],[2,i23.Router]]),i0.ɵmpd(512,\n              i1.DemoModule,i1.DemoModule,([] as any[])),i0.ɵmpd(1024,i23.ROUTES,() => {\n            return [[{path:'',component:i24.DemoComponent}]];\n          },([] as any[]))]);\n    });\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL21hdHRsZXdpcy9Db2RlL29wZW4tc291cmNlL2FuZ3VsYXItY2FsZW5kYXIvZGVtb3MvZGVtby1tb2R1bGVzL2FzeW5jLWV2ZW50cy9tb2R1bGUubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvbWF0dGxld2lzL0NvZGUvb3Blbi1zb3VyY2UvYW5ndWxhci1jYWxlbmRhci9kZW1vcy9kZW1vLW1vZHVsZXMvYXN5bmMtZXZlbnRzL21vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIgIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9\n\n\n\n// WEBPACK FOOTER //\n// ./dist/aot/demos/demo-modules/async-events/module.ngfactory.ts"],"sourceRoot":""}