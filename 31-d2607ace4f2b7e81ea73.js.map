{"version":3,"sources":["webpack:///31-d2607ace4f2b7e81ea73.js","webpack:///./demos/demo-modules/async-events/sources.ts","webpack:///./demos/demo-modules/async-events/component.ts?d058","webpack:///./demos/demo-modules/async-events/template.html","webpack:///./demos/demo-modules/async-events/module.ts?c2ba"],"names":["webpackJsonp","651","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","d","sources","filename","contents","698","exports","699","700"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,IACnCH,EAAoBI,EAAEL,EAAqB,UAAW,WAAa,MAAOM,ICPlG,IAAMA,KAETC,SAAU,eACVC,SAAUP,EAAQ,OAGlBM,SAAU,gBACVC,SAAUP,EAAQ,OAGlBM,SAAU,YACVC,SAAUP,EAAQ,QDehBQ,IACA,SAAUV,EAAQW,GE3BxBX,EAAAW,QAAA,8pFFiCMC,IACA,SAAUZ,EAAQW,GGlCxBX,EAAAW,QAAA,8mCHwCME,IACA,SAAUb,EAAQW,GIzCxBX,EAAAW,QAAA","file":"31-d2607ace4f2b7e81ea73.js","sourcesContent":["webpackJsonp([31],{\n\n/***/ 651:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sources\", function() { return sources; });\nvar sources = [\n    {\n        filename: 'component.ts',\n        contents: __webpack_require__(698)\n    },\n    {\n        filename: 'template.html',\n        contents: __webpack_require__(699)\n    },\n    {\n        filename: 'module.ts',\n        contents: __webpack_require__(700)\n    }\n];\n//# sourceMappingURL=sources.js.map\n\n/***/ }),\n\n/***/ 698:\n/***/ (function(module, exports) {\n\nmodule.exports = \"import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\\nimport { Http, URLSearchParams } from '@angular/http';\\nimport 'rxjs/add/operator/map';\\nimport { CalendarEvent } from 'angular-calendar';\\nimport {\\n  isSameMonth,\\n  isSameDay,\\n  startOfMonth,\\n  endOfMonth,\\n  startOfWeek,\\n  endOfWeek,\\n  startOfDay,\\n  endOfDay,\\n  format\\n} from 'date-fns';\\nimport { Observable } from 'rxjs/Observable';\\nimport { colors } from '../demo-utils/colors';\\n\\ninterface Film {\\n  id: number;\\n  title: string;\\n  release_date: string;\\n}\\n\\n@Component({\\n  selector: 'mwl-demo-component',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  templateUrl: 'template.html'\\n})\\nexport class DemoComponent implements OnInit {\\n  view: string = 'month';\\n\\n  viewDate: Date = new Date();\\n\\n  events$: Observable<Array<CalendarEvent<{ film: Film }>>>;\\n\\n  activeDayIsOpen: boolean = false;\\n\\n  constructor(private http: Http) {}\\n\\n  ngOnInit(): void {\\n    this.fetchEvents();\\n  }\\n\\n  fetchEvents(): void {\\n    const getStart: any = {\\n      month: startOfMonth,\\n      week: startOfWeek,\\n      day: startOfDay\\n    }[this.view];\\n\\n    const getEnd: any = {\\n      month: endOfMonth,\\n      week: endOfWeek,\\n      day: endOfDay\\n    }[this.view];\\n\\n    const search: URLSearchParams = new URLSearchParams();\\n    search.set(\\n      'primary_release_date.gte',\\n      format(getStart(this.viewDate), 'YYYY-MM-DD')\\n    );\\n    search.set(\\n      'primary_release_date.lte',\\n      format(getEnd(this.viewDate), 'YYYY-MM-DD')\\n    );\\n    search.set('api_key', '0ec33936a68018857d727958dca1424f');\\n    this.events$ = this.http\\n      .get('https://api.themoviedb.org/3/discover/movie', { search })\\n      .map(res => res.json())\\n      .map(({ results }: { results: Film[] }) => {\\n        return results.map((film: Film) => {\\n          return {\\n            title: film.title,\\n            start: new Date(film.release_date),\\n            color: colors.yellow,\\n            meta: {\\n              film\\n            }\\n          };\\n        });\\n      });\\n  }\\n\\n  dayClicked({\\n    date,\\n    events\\n  }: {\\n    date: Date;\\n    events: Array<CalendarEvent<{ film: Film }>>;\\n  }): void {\\n    if (isSameMonth(date, this.viewDate)) {\\n      if (\\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\\n        events.length === 0\\n      ) {\\n        this.activeDayIsOpen = false;\\n      } else {\\n        this.activeDayIsOpen = true;\\n        this.viewDate = date;\\n      }\\n    }\\n  }\\n\\n  eventClicked(event: CalendarEvent<{ film: Film }>): void {\\n    window.open(\\n      `https://www.themoviedb.org/movie/${event.meta.film.id}`,\\n      '_blank'\\n    );\\n  }\\n}\\n\"\n\n/***/ }),\n\n/***/ 699:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<mwl-demo-utils-calendar-header\\n  [(view)]=\\\"view\\\"\\n  [(viewDate)]=\\\"viewDate\\\"\\n  (viewDateChange)=\\\"fetchEvents()\\\"\\n  (viewChange)=\\\"fetchEvents()\\\">\\n</mwl-demo-utils-calendar-header>\\n\\n<ng-template #loading>\\n  <div class=\\\"text-center\\\">\\n    <i class=\\\"fa fa-spin fa-spinner fa-5x\\\"></i>\\n    <br>\\n    Loading events...\\n  </div>\\n</ng-template>\\n\\n<div *ngIf=\\\"events$ | async; else loading; let events\\\">\\n  <div [ngSwitch]=\\\"view\\\">\\n    <mwl-calendar-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [viewDate]=\\\"viewDate\\\"\\n      [events]=\\\"events\\\"\\n      [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\n      (dayClicked)=\\\"dayClicked($event.day)\\\"\\n      (eventClicked)=\\\"eventClicked($event.event)\\\">\\n    </mwl-calendar-month-view>\\n    <mwl-calendar-week-view\\n      *ngSwitchCase=\\\"'week'\\\"\\n      [viewDate]=\\\"viewDate\\\"\\n      [events]=\\\"events\\\"\\n      (eventClicked)=\\\"eventClicked($event.event)\\\">\\n    </mwl-calendar-week-view>\\n    <mwl-calendar-day-view\\n      *ngSwitchCase=\\\"'day'\\\"\\n      [viewDate]=\\\"viewDate\\\"\\n      [events]=\\\"events\\\"\\n      (eventClicked)=\\\"eventClicked($event.event)\\\">\\n    </mwl-calendar-day-view>\\n  </div>\\n</div>\"\n\n/***/ }),\n\n/***/ 700:\n/***/ (function(module, exports) {\n\nmodule.exports = \"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { HttpModule } from '@angular/http';\\nimport { RouterModule } from '@angular/router';\\nimport { CalendarModule } from 'angular-calendar';\\nimport { DemoUtilsModule } from '../demo-utils/module';\\nimport { DemoComponent } from './component';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    HttpModule,\\n    CalendarModule.forRoot(),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: '', component: DemoComponent }])\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent]\\n})\\nexport class DemoModule {}\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 31-d2607ace4f2b7e81ea73.js","export const sources = [\n  {\n    filename: 'component.ts',\n    contents: require('!!raw-loader!./component')\n  },\n  {\n    filename: 'template.html',\n    contents: require('!!raw-loader!./template.html')\n  },\n  {\n    filename: 'module.ts',\n    contents: require('!!raw-loader!./module')\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./demos/demo-modules/async-events/sources.ts","module.exports = \"import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\\nimport { Http, URLSearchParams } from '@angular/http';\\nimport 'rxjs/add/operator/map';\\nimport { CalendarEvent } from 'angular-calendar';\\nimport {\\n  isSameMonth,\\n  isSameDay,\\n  startOfMonth,\\n  endOfMonth,\\n  startOfWeek,\\n  endOfWeek,\\n  startOfDay,\\n  endOfDay,\\n  format\\n} from 'date-fns';\\nimport { Observable } from 'rxjs/Observable';\\nimport { colors } from '../demo-utils/colors';\\n\\ninterface Film {\\n  id: number;\\n  title: string;\\n  release_date: string;\\n}\\n\\n@Component({\\n  selector: 'mwl-demo-component',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  templateUrl: 'template.html'\\n})\\nexport class DemoComponent implements OnInit {\\n  view: string = 'month';\\n\\n  viewDate: Date = new Date();\\n\\n  events$: Observable<Array<CalendarEvent<{ film: Film }>>>;\\n\\n  activeDayIsOpen: boolean = false;\\n\\n  constructor(private http: Http) {}\\n\\n  ngOnInit(): void {\\n    this.fetchEvents();\\n  }\\n\\n  fetchEvents(): void {\\n    const getStart: any = {\\n      month: startOfMonth,\\n      week: startOfWeek,\\n      day: startOfDay\\n    }[this.view];\\n\\n    const getEnd: any = {\\n      month: endOfMonth,\\n      week: endOfWeek,\\n      day: endOfDay\\n    }[this.view];\\n\\n    const search: URLSearchParams = new URLSearchParams();\\n    search.set(\\n      'primary_release_date.gte',\\n      format(getStart(this.viewDate), 'YYYY-MM-DD')\\n    );\\n    search.set(\\n      'primary_release_date.lte',\\n      format(getEnd(this.viewDate), 'YYYY-MM-DD')\\n    );\\n    search.set('api_key', '0ec33936a68018857d727958dca1424f');\\n    this.events$ = this.http\\n      .get('https://api.themoviedb.org/3/discover/movie', { search })\\n      .map(res => res.json())\\n      .map(({ results }: { results: Film[] }) => {\\n        return results.map((film: Film) => {\\n          return {\\n            title: film.title,\\n            start: new Date(film.release_date),\\n            color: colors.yellow,\\n            meta: {\\n              film\\n            }\\n          };\\n        });\\n      });\\n  }\\n\\n  dayClicked({\\n    date,\\n    events\\n  }: {\\n    date: Date;\\n    events: Array<CalendarEvent<{ film: Film }>>;\\n  }): void {\\n    if (isSameMonth(date, this.viewDate)) {\\n      if (\\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\\n        events.length === 0\\n      ) {\\n        this.activeDayIsOpen = false;\\n      } else {\\n        this.activeDayIsOpen = true;\\n        this.viewDate = date;\\n      }\\n    }\\n  }\\n\\n  eventClicked(event: CalendarEvent<{ film: Film }>): void {\\n    window.open(\\n      `https://www.themoviedb.org/movie/${event.meta.film.id}`,\\n      '_blank'\\n    );\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./demos/demo-modules/async-events/component.ts\n// module id = 698\n// module chunks = 31","module.exports = \"<mwl-demo-utils-calendar-header\\n  [(view)]=\\\"view\\\"\\n  [(viewDate)]=\\\"viewDate\\\"\\n  (viewDateChange)=\\\"fetchEvents()\\\"\\n  (viewChange)=\\\"fetchEvents()\\\">\\n</mwl-demo-utils-calendar-header>\\n\\n<ng-template #loading>\\n  <div class=\\\"text-center\\\">\\n    <i class=\\\"fa fa-spin fa-spinner fa-5x\\\"></i>\\n    <br>\\n    Loading events...\\n  </div>\\n</ng-template>\\n\\n<div *ngIf=\\\"events$ | async; else loading; let events\\\">\\n  <div [ngSwitch]=\\\"view\\\">\\n    <mwl-calendar-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [viewDate]=\\\"viewDate\\\"\\n      [events]=\\\"events\\\"\\n      [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\n      (dayClicked)=\\\"dayClicked($event.day)\\\"\\n      (eventClicked)=\\\"eventClicked($event.event)\\\">\\n    </mwl-calendar-month-view>\\n    <mwl-calendar-week-view\\n      *ngSwitchCase=\\\"'week'\\\"\\n      [viewDate]=\\\"viewDate\\\"\\n      [events]=\\\"events\\\"\\n      (eventClicked)=\\\"eventClicked($event.event)\\\">\\n    </mwl-calendar-week-view>\\n    <mwl-calendar-day-view\\n      *ngSwitchCase=\\\"'day'\\\"\\n      [viewDate]=\\\"viewDate\\\"\\n      [events]=\\\"events\\\"\\n      (eventClicked)=\\\"eventClicked($event.event)\\\">\\n    </mwl-calendar-day-view>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./demos/demo-modules/async-events/template.html\n// module id = 699\n// module chunks = 31","module.exports = \"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { HttpModule } from '@angular/http';\\nimport { RouterModule } from '@angular/router';\\nimport { CalendarModule } from 'angular-calendar';\\nimport { DemoUtilsModule } from '../demo-utils/module';\\nimport { DemoComponent } from './component';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    HttpModule,\\n    CalendarModule.forRoot(),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: '', component: DemoComponent }])\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent]\\n})\\nexport class DemoModule {}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./demos/demo-modules/async-events/module.ts\n// module id = 700\n// module chunks = 31"],"sourceRoot":""}